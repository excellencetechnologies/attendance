{"version":3,"sources":["modules/manageUsers/components/FormAddNewEmployeeDetails.js","modules/manageUsers/components/FormAddNewEmployee.jsx","redux/manageUsers/actions/manageUsers.js"],"names":["signaturePad","FormAddNewEmployeeDetails","props","_this","Object","_var_www_html_inhouse_ReactReduxHR_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_var_www_html_inhouse_ReactReduxHR_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_var_www_html_inhouse_ReactReduxHR_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onIsAlreadyLogin","state","user_id","permanent_address","emergency_ph1","emergency_ph2","blood_group","medical_condition","holding_comments","signature","callAddNewEmployeeDetails","bind","_var_www_html_inhouse_ReactReduxHR_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleCanvas","_this2","SignaturePad","document","getElementById","backgroundColor","penColor","onEnd","localStorage","setItem","toDataURL","setState","onUsersList","clear","new_profile_details","_this3","onAddNewUserDetails","then","data","notify","message","history","push","concat","params","id","error","_this4","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_components_generic_Menu__WEBPACK_IMPORTED_MODULE_16__","className","role","_components_generic_Header__WEBPACK_IMPORTED_MODULE_18__","pageTitle","showLoading","frontend","show_loading","material_ui_TextField__WEBPACK_IMPORTED_MODULE_8___default","floatingLabelText","floatingLabelFixed","fullWidth","onChange","e","target","value","type","ref","disabled","onClick","style","width","height","border","_components_generic_buttons_ButtonRaised__WEBPACK_IMPORTED_MODULE_20__","handleCancelButton","label","React","Component","AddNewEmployeeDetails","withRouter","connect","toJS","loggedUser","logged_user","userLogin","manageUsers","dispatch","actions","actionsUsersList","actionsManageUsers","PropTypes","func","isRequired","usersList","object","router","FormAddNewEmployee","loading","dateofjoining","Date","name","jobtitle","gender","dob","username","training_month","workemail","callAddNewEmployee","newEmployeeDetails","onAddNewEmployee","_components_generic_Menu__WEBPACK_IMPORTED_MODULE_12__","_components_generic_Header__WEBPACK_IMPORTED_MODULE_14__","CONFIG","DEFAULT_PASSWORD","material_ui_DatePicker__WEBPACK_IMPORTED_MODULE_21___default","hintText","event","date","evt","_components_generic_buttons_ButtonRaised__WEBPACK_IMPORTED_MODULE_22__","material_ui_CircularProgress__WEBPACK_IMPORTED_MODULE_19___default","AddNewEmployee","__webpack_require__","d","__webpack_exports__","getUserProfileDetails","updateUserProfileDetails","addNewEmployee","getUserDocument","deleteDocument","changeEmployeeStatus","getSteps","changeSteps","addNewUserDetails","getAllEmployeeDetails","redux_actions__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","async_queue__WEBPACK_IMPORTED_MODULE_2__","async_queue__WEBPACK_IMPORTED_MODULE_2___default","n","_services_index__WEBPACK_IMPORTED_MODULE_3__","_redux_generic_actions_frontend__WEBPACK_IMPORTED_MODULE_4__","_redux_constants__WEBPACK_IMPORTED_MODULE_5__","moment","require","userid","getState","Promise","resolve","reject","fireAjax","action","async_getUserProfileDetails","json","hide_loading","constants","payload","success_user_profile","createAction","error_update_user_profile_details","n_user_id","n_name","n_jobtitle","n_team","n_dateofjoining","n_work_email","n_other_email","n_gender","n_dob","n_marital_status","n_address1","n_address2","n_emergency_ph1","n_emergency_ph2","n_blood_group","n_medical_condition","n_send_slack_msg","send_slack_msg","n_slack_msg","slack_msg","n_training_completion_date","n_termination_date","n_holding_comments","n_training_month","team","work_email","other_email","mydate","format","marital_status","address1","address2","training_completion_date","termination_date","trim","current_address","async_updateUserProfileDetails","error_add_new_employee","new_employee_details","n_username","n_workemail","async_addNewEmployee","error_user_document","async_getUserDocument","doc_id","async_deleteDocument","status","async_changeEmployeeStatus","successGetStep","errorGetStep","queue","callback","asyncGetSteps","stepid","asyncChangeSteps","errorAddNewUserDetails","n_signature","async_addNewUserDetails","res","successGetAllEmployeeDetails","length","getEmployeesSalaryDetails","users","i","arguments","undefined","user_Id","async_get_user_salary_details","salary_details","orderedSalary","_","current_salary","test","total_salary","console","log"],"mappings":"yGAqBIA,yOACEC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDA,MAAMQ,mBACXP,EAAKQ,MAAQ,CACXC,QAAS,GACTC,kBAAmB,GACnBC,cAAe,GACfC,cAAe,GACfC,YAAa,GACbC,kBAAmB,GACnBC,iBAAkB,GAClBC,UAAW,IAEbhB,EAAKiB,0BAA4BjB,EAAKiB,0BAA0BC,KAA/BjB,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAAD,KACjCA,EAAKoB,aAAepB,EAAKoB,aAAaF,KAAlBjB,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAAD,KAdHA,8EAiBJ,IAAAqB,EAAAlB,KACbN,EAAe,IAAIyB,IAAaC,SAASC,eAAe,iBAAkB,CACxEC,gBAAiB,yBACjBC,SAAU,eACVC,MAAO,WACLC,aAAaC,QAAQ,YAAahC,EAAaiC,aAC/CT,EAAKU,SAAS,CACZf,UAAWY,aAAaZ,4DAM9Bb,KAAKJ,MAAMiC,2DAGXnC,EAAaoC,0DAEWC,GAAqB,IAAAC,EAAAhC,KAC7CA,KAAKJ,MAAMqC,oBAAoBF,GAAqBG,KAClD,SAAAC,GACEC,YAAO,YAAaD,EAAKE,QAAS,WAClCL,EAAKpC,MAAM0C,QAAQC,KAAnB,kBAAAC,OAA0CR,EAAKpC,MAAM6C,OAAOC,MAE9D,SAAAC,GACEP,YAAO,QAASO,EAAO,4CAIpB,IAAAC,EAAA5C,KACP,OACE6C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAShD,KAAKJ,OACfiD,EAAAC,EAAAC,cAAA,OAAKL,GAAG,UAAUO,UAAU,4BAA4BC,KAAK,QAC3DL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,UAAW,2BACXC,YAAarD,KAAKJ,MAAM0D,SAASC,eAEnCV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWP,GAAG,QAC3BG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,kBAAkB,oBAClBC,oBAAkB,EAClBC,WAAS,EACTC,SAAU,SAAAC,GAAC,OACTjB,EAAKhB,SAAS,CAAErB,kBAAmBsD,EAAEC,OAAOC,SAE9CA,MAAO/D,KAAKK,MAAME,qBAGtBsC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEkB,KAAK,SACLP,kBAAkB,WAClBC,oBAAkB,EAClBC,WAAS,EACTC,SAAU,SAAAC,GAAC,OACTjB,EAAKhB,SAAS,CAAEpB,cAAeqD,EAAEC,OAAOC,SAE1CA,MAAO/D,KAAKK,MAAMG,iBAItBqC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEkB,KAAK,SACLP,kBAAkB,uBAClBC,oBAAkB,EAClBC,WAAS,EACTC,SAAU,SAAAC,GAAC,OACTjB,EAAKhB,SAAS,CAAEnB,cAAeoD,EAAEC,OAAOC,SAE1CA,MAAO/D,KAAKK,MAAMI,iBAGtBoC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,cAEEJ,EAAAC,EAAAC,cAAA,UACEE,UAAU,eACVgB,IAAI,cACJL,SAAU,SAAAC,GAAC,OAAIjB,EAAKhB,SAAS,CAAElB,YAAamD,EAAEC,OAAOC,SACrDA,MAAO/D,KAAKK,MAAMK,aAElBmC,EAAAC,EAAAC,cAAA,UAAQmB,UAAQ,GAAhB,0BACArB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,OACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,MACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,OACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,MACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,OACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,MACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,OACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,QAGJlB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,kBAAkB,qCAClBC,oBAAkB,EAClBC,WAAS,EACTC,SAAU,SAAAC,GAAC,OACTjB,EAAKhB,SAAS,CAAEjB,kBAAmBkD,EAAEC,OAAOC,SAE9CA,MAAO/D,KAAKK,MAAMM,qBAGtBkC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,kBAAkB,2BAClBC,oBAAkB,EAClBC,WAAS,EACTC,SAAU,SAAAC,GAAC,OACTjB,EAAKhB,SAAS,CACZhB,iBAAkBiD,EAAEC,OAAOC,MAC3BzD,QAASsC,EAAKhD,MAAM6C,OAAOC,MAG/BqB,MAAO/D,KAAKK,MAAMO,oBAGtBiC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,UACEL,GAAG,gBACHyB,QAASnE,KAAKiB,aACdgC,UAAU,gBACVmB,MAAO,CACLC,MAAO,OACPC,OAAQ,IACRC,OAAQ,kCAGZ1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEL,QAASnE,KAAKyE,mBACd/B,GAAG,QACHgC,MAAO,UAGT7B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEvB,UAAU,gCACVkB,QAAS,kBAAMvB,EAAK9B,0BAA0B8B,EAAKvC,QACnDqE,MAAO,sBAjKaC,IAAMC,WAqL9C,IAeMC,EAAwBC,YAC5BC,YAxBF,SAAyB1E,GACvB,MAAO,CACLiD,SAAUjD,EAAMiD,SAAS0B,OACzBC,WAAY5E,EAAM6E,YAAYC,UAC9BC,YAAa/E,EAAM+E,YAAYJ,SAIR,SAAAK,GACzB,MAAO,CACLjF,iBAAkB,WAChB,OAAOiF,EAASC,qBAElBzD,YAAa,WACX,OAAOwD,EAASE,QAElBtD,oBAAqB,SAAAF,GACnB,OAAOsD,EACLG,IAAqCzD,OAM3CgD,CAA6CpF,IAGhCkF,YAEfA,EAAsBY,UAAY,CAChCrF,iBAAkBqF,IAAUC,KAAKC,WACjCC,UAAWH,IAAUI,OAAOF,WAC5B1D,oBAAqBwD,IAAUC,KAAKC,WACpCG,OAAQL,IAAUI,OAAOF,8TC9MrBI,cACJ,SAAAA,EAAYnG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,IACjBlG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiG,GAAA5F,KAAAH,KAAMJ,KACDA,MAAMQ,mBACXP,EAAKQ,MAAQ,CACX2F,SAAS,EACTC,cAAe,IAAIC,KACnBC,KAAM,GACN7F,QAAS,GACT8F,SAAU,GACVC,OAAQ,GACRC,IAAK,IAAIJ,KACTK,SAAU,GACVC,eAAgB,GAChBC,UAAW,IAEb5G,EAAK6G,mBAAqB7G,EAAK6G,mBAAmB3F,KAAxBjB,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAAD,KAfTA,oFAkBjBG,KAAKJ,MAAMiC,yDAGM8E,GAAoB,IAAAzF,EAAAlB,KACrCA,KAAK4B,SAAS,CACZoE,SAAS,IAEXhG,KAAKJ,MAAMgH,iBAAiBD,GAAoBzE,KAC9C,SAAAC,GACEC,YAAOD,EAAKE,SACZnB,EAAKtB,MAAMiC,cACXX,EAAKU,SAAS,CACZtB,QAAS6B,EAAK7B,UAEhBY,EAAKtB,MAAM0C,QAAQC,KAAnB,qBAAAC,OAA6CtB,EAAKb,MAAMC,UAC5CY,EAAKtB,MAAMgG,UAAUW,UAEnC,SAAA5D,GACEzB,EAAKU,SAAS,CACZoE,SAAS,IAEX5D,YAAOO,sCAKJ,IAAAX,EAAAhC,KACP,OACE6C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8D,EAAA,EAAS7G,KAAKJ,OACfiD,EAAAC,EAAAC,cAAA,OAAKL,GAAG,UAAUO,UAAU,4BAA4BC,KAAK,QAC3DL,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACE1D,UAAW,2BACXC,YAAarD,KAAKJ,MAAM0D,SAASC,eAEnCV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWP,GAAG,QAC3BG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAEbJ,EAAAC,EAAAC,cAAA,yEAKFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAf,0BAC0B8D,IAAOC,kBAEjCnE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,kBAEEJ,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CACEoE,SAAS,kBACTnD,MAAO/D,KAAKK,MAAM4F,cAClBrC,SAAU,SAACuD,EAAOC,GAChBpF,EAAKJ,SAAS,CAAEqE,cAAemB,QAIrCvE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,gBAEEJ,EAAAC,EAAAC,cAACkE,EAAAnE,EAAD,CACEoE,SAAS,gBACTnD,MAAO/D,KAAKK,MAAMiG,IAClB1C,SAAU,SAACuD,EAAOC,GAChBpF,EAAKJ,SAAS,CAAE0E,IAAKc,UAM/BvE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,iBAEEJ,EAAAC,EAAAC,cAAA,UACEE,UAAU,eACVgB,IAAI,iBACJL,SAAU,SAAAyD,GACRrF,EAAKJ,SAAS,CACZ4E,eAAgBa,EAAIvD,OAAOC,UAI/BlB,EAAAC,EAAAC,cAAA,UAAQmB,UAAQ,GAAhB,oBACArB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,YACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,WACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,WACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,WACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,KAAd,aAGJlB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BAAf,SAEEJ,EAAAC,EAAAC,cAAA,UACEE,UAAU,eACVgB,IAAI,SACJL,SAAU,SAAAC,GAAC,OACT7B,EAAKJ,SAAS,CAAEyE,OAAQxC,EAAEC,OAAOC,SAEnCA,MAAO/D,KAAKK,MAAMgG,QAElBxD,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,IAAd,qBACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,UAAd,UACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,QAAd,QACAlB,EAAAC,EAAAC,cAAA,UAAQgB,MAAM,SAAd,aAKRlB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,kBAAkB,OAClBC,oBAAkB,EAClBC,WAAS,EACTC,SAAU,SAAAC,GAAC,OACT7B,EAAKJ,SAAS,CAAEuE,KAAMtC,EAAEC,OAAOC,SAEjCA,MAAO/D,KAAKK,MAAM8F,QAItBtD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,kBAAkB,YAClBC,oBAAkB,EAClBC,WAAS,EACTC,SAAU,SAAAC,GAAC,OACT7B,EAAKJ,SAAS,CAAEwE,SAAUvC,EAAEC,OAAOC,SAErCA,MAAO/D,KAAKK,MAAM+F,cAK1BvD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACEW,kBAAkB,WAClBC,oBAAkB,EAClBC,WAAS,EACTC,SAAU,SAAAC,GAAC,OACT7B,EAAKJ,SAAS,CAAE2E,SAAU1C,EAAEC,OAAOC,SAErCA,MAAO/D,KAAKK,MAAMkG,YAGtB1D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CACAkB,KAAK,QACHP,kBAAkB,aAClBC,oBAAkB,EAClBC,WAAS,EACTC,SAAU,SAAAC,GAAC,OACT7B,EAAKJ,SAAS,CAAE6E,UAAW5C,EAAEC,OAAOC,SAEtCA,MAAO/D,KAAKK,MAAMoG,aAGtB5D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BAEjBJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACQ,GAAtBjD,KAAKK,MAAM2F,QACVnD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CACErE,UAAU,gCACVkB,QAAS,kBAAMnC,EAAK0E,mBAAmB1E,EAAK3B,QAC5CqE,MAAO,SAGT7B,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,oBAzMW6B,IAAMC,WA+NvC,IAcM4C,EAAiB1C,YACrBC,YAxBF,SAAyB1E,GACvB,MAAO,CACLiD,SAAUjD,EAAMiD,SAAS0B,OACzBC,WAAY5E,EAAM6E,YAAYC,UAC9BC,YAAa/E,EAAM+E,YAAYJ,OAC/BY,UAAWvF,EAAMuF,UAAUZ,SAIJ,SAAAK,GACzB,MAAO,CACLjF,iBAAkB,WAChB,OAAOiF,EAASC,qBAElBsB,iBAAkB,SAAAD,GAChB,OAAOtB,EAASG,IAAkCmB,KAEpD9E,YAAa,WACX,OAAOwD,EAASE,UAMpBR,CAA6CgB,IAGhCyB,YAEfA,EAAe/B,UAAY,CACzBrF,iBAAkBqF,IAAUC,KAAKC,WACjCC,UAAWH,IAAUI,OAAOF,WAC5BiB,iBAAkBnB,IAAUC,KAAKC,WACjCG,OAAQL,IAAUI,OAAOF,8CC7Q3B8B,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAAV,EAAAC,EAAAC,EAAA,sBAAAS,IAAAX,EAAAC,EAAAC,EAAA,sBAAAU,IAAA,IAAAC,EAAAb,EAAA,MAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAiB,EAAAF,GAAAG,EAAAlB,EAAA,IAAAmB,EAAAnB,EAAA,IAAAoB,EAAApB,EAAA,GAQIqB,EAASC,EAAQ,IAuBd,SAASnB,EAAsBoB,EAAQzC,GAC5C,OAAO,SAASlB,EAAU4D,GACxB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B/D,EAAS9B,eAVf,SAAqCyF,GACnC,OAAOK,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,gCACRhJ,QAAS0I,IAQPO,CAA4BP,GAAQ9G,KAClC,SAAAsH,GAnBD,IAA4BrH,EAoBzBkD,EAASoE,eACS,GAAdD,EAAK7G,MACP0C,EA7BL,SAA8BlD,EAAMoE,GACzC,MAAO,CACLvC,KAAM0F,KACNC,QAASxH,EACToE,SAAUA,GAyBOqD,CAAqBJ,EAAKrH,KAAMoE,IAEzClB,GAxBuBlD,EAwBKqH,EAAKrH,KAAKE,QAvBzCwH,YAAaH,IAAbG,CAAkD1H,MA0BnD,SAAAQ,GAxBD,IAA4BR,EAyBzBkD,EAASoE,eACTpE,GA1ByBlD,EA0BG,kBAzB7B0H,YAAaH,KAAbG,CAAkD1H,UAuCpD,SAAS2H,EAAkC3H,GAChD,OAAO0H,YAAaH,IAAbG,CAAiE1H,GAsDnE,SAAS0F,EAAyB9F,GACvC,OAAO,SAASsD,EAAU4D,GACxB,IAAIc,EAAY,GACZC,EAAS,GACTC,EAAa,GACbC,EAAS,GACTC,EAAkB,GAClBC,EAAe,GACfC,EAAgB,GAChBC,EAAW,GACXC,EAAQ,GACRC,EAAmB,GACnBC,EAAa,GACbC,EAAa,GACbC,EAAkB,GAClBC,EAAkB,GAClBC,EAAgB,GAChBC,EAAsB,GACtBC,EAAmBhJ,EAAoBiJ,eACvCC,EAAclJ,EAAoBmJ,UAClCC,EAA6B,GAC7BC,EAAqB,GACrBC,EAAqB,GACrBC,EAAmB,GAqCvB,GAnC2C,qBAAhCvJ,EAAoBzB,UAC7ByJ,EAAYhI,EAAoBzB,SAEM,qBAA7ByB,EAAoBoE,OAC7B6D,EAASjI,EAAoBoE,MAEa,qBAAjCpE,EAAoBqE,WAC7B6D,EAAalI,EAAoBqE,UAEK,qBAA7BrE,EAAoBwJ,OAC7BrB,EAASnI,EAAoBwJ,MAGgB,qBAAtCxJ,EAAoBkE,eACU,MAArClE,EAAoBkE,gBAEpBkE,EAAkBpI,EAAoBkE,eAIQ,qBAAvClE,EAAoByE,gBACW,MAAtCzE,EAAoByE,iBAEpB8E,EAAmBvJ,EAAoByE,gBAGK,qBAAnCzE,EAAoByJ,aAC7BpB,EAAerI,EAAoByJ,YAEU,qBAApCzJ,EAAoB0J,cAC7BpB,EAAgBtI,EAAoB0J,aAEI,qBAA/B1J,EAAoBsE,SAC7BiE,EAAWvI,EAAoBsE,QAGI,qBAA5BtE,EAAoBuE,KACA,MAA3BvE,EAAoBuE,IACpB,CACA,IAAIoF,EAAS,IAAIxF,KAAKnE,EAAoBuE,KACtCoF,IACFnB,EAAQzB,EAAO4C,GAAQC,OAAO,eA0ClC,MAtCkD,qBAAvC5J,EAAoB6J,iBAC7BpB,EAAmBzI,EAAoB6J,gBAGG,qBAAjC7J,EAAoB8J,WAC7BpB,EAAa1I,EAAoB8J,UAES,qBAAjC9J,EAAoB+J,WAC7BpB,EAAa3I,EAAoB+J,UAEc,qBAAtC/J,EAAoBvB,gBAC7BmK,EAAkB5I,EAAoBvB,eAES,qBAAtCuB,EAAoBtB,gBAC7BmK,EAAkB7I,EAAoBtB,eAEO,qBAApCsB,EAAoBrB,cAC7BmK,EAAgB9I,EAAoBrB,aAEe,qBAA1CqB,EAAoBpB,oBAC7BmK,EAAsB/I,EAAoBpB,mBAGc,qBAAjDoB,EAAoBgK,0BACqB,MAAhDhK,EAAoBgK,2BAEpBZ,EAA6BpJ,EAAoBgK,0BAGD,qBAAzChK,EAAoBiK,kBACa,MAAxCjK,EAAoBiK,mBAEpBZ,EAAqBrJ,EAAoBiK,kBAES,qBAAzCjK,EAAoBnB,mBAC7ByK,EAAqBtJ,EAAoBnB,kBAGlB,KAArBmJ,EAAUkC,OACL/C,QAAQE,OAAO,oBAEF,KAAlBY,EAAOiC,OACF/C,QAAQE,OAAO,iBAEE,KAAtBa,EAAWgC,OACN/C,QAAQE,OAAO,qBAEO,KAA3Be,EAAgB8B,OACX/C,QAAQE,OAAO,yBAEI,KAAxBgB,EAAa6B,OACR/C,QAAQE,OAAO,uBAEK,KAAzBiB,EAAc4B,OACT/C,QAAQE,OAAO,2BAEA,KAApBkB,EAAS2B,OACJ/C,QAAQE,OAAO,mBAEH,KAAjBmB,EAAM0B,OACD/C,QAAQE,OAAO,0BAEQ,KAA5BoB,EAAiByB,OACZ/C,QAAQE,OAAO,+BAEE,KAAtBqB,EAAWwB,OACN/C,QAAQE,OAAO,4BAEE,KAAtBsB,EAAWuB,OACN/C,QAAQE,OAAO,8BAEO,KAA3BuB,EAAgBsB,OACX/C,QAAQE,OAAO,iCAEO,KAA3BwB,EAAgBqB,OACX/C,QAAQE,OAAO,iCAEK,KAAzByB,EAAcoB,OACT/C,QAAQE,OAAO,4BAEW,KAA/B0B,EAAoBmB,OACf/C,QAAQE,OAAO,mCAGQ,KAA5BkC,EAAiBW,OACZ/C,QAAQE,OAAO,2BAWjB,IAAIF,QAAQ,SAACC,EAASC,GAC3B/D,EAAS9B,eA1Nf,SACEwG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAK,EACAC,EACAC,EACAC,EACAP,EACAE,GAEA,OAAO5B,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,mCACRhJ,QAASyJ,EACT6B,eAAgBpB,EAChBrE,KAAM6D,EACN5D,SAAU6D,EACVsB,KAAMrB,EACNjE,cAAekE,EACfqB,WAAYpB,EACZqB,YAAapB,EACbhE,OAAQiE,EACRhE,IAAKiE,EACLhK,kBAAmBmK,EACnBwB,gBAAiBzB,EACjBjK,cAAemK,EACflK,cAAemK,EACflK,YAAamK,EACblK,kBAAmBmK,EACnBiB,yBAA0BZ,EAC1Ba,iBAAkBZ,EAClB5E,eAAgB8E,EAChB1K,iBAAkByK,EAClBL,eAAgBD,EAChBG,UAAWD,IA4KTkB,CACEpC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAK,EACAC,EACAC,EACAC,EACAP,EACAE,GACA/I,KACA,SAAAsH,GA5PD,IAA6CrH,EA6P1CkD,EAASoE,eACS,GAAdD,EAAK7G,OACP0C,EAASuC,EAAsBmC,IAC/B1E,GAhQwClD,EAgQKqH,EAAKrH,KAAKE,QA/P1DwH,YAAaH,KAAbG,CACL1H,OAgQQkD,EAASyE,EAAkCN,EAAKrH,KAAKE,UACrD+G,EAAOI,EAAKrH,QAGhB,SAAAQ,GACE0C,EAASoE,eACTpE,EAASyE,EAAkC,yBAa9C,SAASsC,EAAuBjK,GACrC,OAAO0H,YAAaH,IAAbG,CAAsD1H,GA0BxD,SAAS2F,EAAeuE,GAC7B,OAAO,SAAShH,EAAU4D,GACxB,IAAIkB,EAAkB,GAClBH,EAAS,GACTC,EAAa,GACbK,EAAW,GACXC,EAAQ,GACR+B,EAAa,GACbhB,EAAmB,GACnBiB,EAAc,GAElB,MACgD,qBAAvCF,EAAqBpG,eACU,IAAtCoG,EAAqBpG,cAEdiD,QAAQE,OAAO,6BAEtBe,EAAkBkC,EAAqBpG,cAIF,qBAA9BoG,EAAqBlG,MACC,IAA7BkG,EAAqBlG,KAEd+C,QAAQE,OAAO,kBAEtBY,EAASqC,EAAqBlG,KAIW,qBAAlCkG,EAAqBjG,UACK,IAAjCiG,EAAqBjG,SAEd8C,QAAQE,OAAO,uBAEtBa,EAAaoC,EAAqBjG,SAIK,qBAAhCiG,EAAqBhG,QACG,IAA/BgG,EAAqBhG,OAEd6C,QAAQE,OAAO,oBAEtBkB,EAAW+B,EAAqBhG,OAII,qBAA7BgG,EAAqB/F,KACA,IAA5B+F,EAAqB/F,IAEd4C,QAAQE,OAAO,2BAEtBmB,EAAQ8B,EAAqB/F,IAIU,qBAAhC+F,EAAqBhG,QACG,IAA/BgG,EAAqBhG,OAEd6C,QAAQE,OAAO,oBAEtBkB,EAAW+B,EAAqBhG,OAIS,qBAAlCgG,EAAqB9F,UACK,IAAjC8F,EAAqB9F,SAEd2C,QAAQE,OAAO,sBAEtBkD,EAAaD,EAAqB9F,SAIa,qBAAxC8F,EAAqB7F,gBACW,IAAvC6F,EAAqB7F,eAEd0C,QAAQE,OAAO,4BAEtBkC,EAAmBe,EAAqB7F,eAIE,qBAAnC6F,EAAqB5F,WACM,IAAlC4F,EAAqB5F,UAEdyC,QAAQE,OAAO,wBAEtBmD,EAAcF,EAAqB5F,UAG9B,IAAIyC,QAAQ,SAACC,EAASC,GAC3B/D,EAAS9B,eApHf,SACE4G,EACAH,EACAC,EACAK,EACAC,EACA+B,EACAhB,EACAiB,GAEA,OAAOlD,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,mBACRrD,cAAekE,EACfhE,KAAM6D,EACN5D,SAAU6D,EACV5D,OAAQiE,EACRhE,IAAKiE,EACLhE,SAAU+F,EACV9F,eAAgB8E,EAChB7E,UAAW8F,IAkGTC,CACErC,EACAH,EACAC,EACAK,EACAC,EACA+B,EACAhB,EACAiB,GACArK,KACA,SAAAsH,GAvID,IAAkCrH,EAwI/BkD,EAASoE,eACS,GAAdD,EAAK7G,OACP0C,GA1I6BlD,EA0IKqH,EAAKrH,KAzI1C0H,YAAaH,KAAbG,CAAwD1H,KA0IrDgH,EAAQK,EAAKrH,QAEbkD,EAAS+G,EAAuB5C,EAAKrH,KAAKE,UAC1C+G,EAAOI,EAAKrH,KAAKE,WAGrB,SAAAM,GACE0C,EAASoE,eACTpE,EAAS+G,EAAuB,oBAChChD,EAAO,iCAWV,SAASqD,EAAoBtK,GAClC,OAAO0H,YAAaH,KAAbG,CAAmD1H,GAUrD,SAAS4F,EAAgBiB,GAC9B,OAAO,SAAS3D,EAAU4D,GACxB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B/D,EAAS9B,eAVf,SAA+ByF,GAC7B,OAAOK,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,0BACRhJ,QAAS0I,IAQP0D,CAAsB1D,GAAQ9G,KAC5B,SAAAsH,GAnBD,IAA+BrH,EAoB5BkD,EAASoE,eACS,GAAdD,EAAK7G,MACP0C,GAtB0BlD,EAsBKqH,EAAKrH,KArBvC0H,YAAaH,KAAbG,CAAqD1H,KAwBlDkD,EAASoH,EAAoBjD,EAAKrH,KAAKE,WAI3C,SAAAM,GACE0C,EAASoE,eACTpE,EAASoH,EAAoB,yBAgBhC,SAASzE,EAAe2E,GAC7B,OAAO,SAAStH,EAAU4D,GACxB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B/D,EAAS9B,eAVf,SAA8BoJ,GAC5B,OAAOtD,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,uBACR5G,GAAIiK,IAQFC,CAAqBD,GAAQzK,KAC3B,SAAAsH,GACEnE,EAASoE,eACS,GAAdD,EAAK7G,MACPwG,EAAQK,EAAKrH,KAAKE,SAElB+G,EAAOI,EAAKrH,KAAKE,UAGrB,SAAAM,GACE0C,EAASoE,eACTL,EAAO,uBAiBV,SAASnB,EAAqBe,EAAQ6D,GAC3C,OAAO,SAASxH,EAAU4D,GACxB,OAAO,IAAIC,QAAQ,SAACC,EAASC,IAVjC,SAAoCJ,EAAQ6D,GAC1C,OAAOxD,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,yBACRhJ,QAAS0I,EACT6D,OAAQA,KAONC,CAA2B9D,EAAQ6D,GAAQ3K,KACzC,SAAAsH,GACqB,IAAfA,EAAK7G,MACPwG,EAAQ,iBAERC,EAAOI,EAAKrH,KAAKE,UAGrB,SAAAM,GACEyG,EAAO,uBAOjB,SAAS2D,EAAe5K,GACtB,OAAO0H,YAAaH,KAAbG,CAAiD1H,GAE1D,SAAS6K,EAAa7K,GACpB,OAAO0H,YAAaH,IAAbG,CAA+C1H,GAGrC8K,IAAM,SAASjE,EAAQ3D,EAAU6H,GAClD,OAAO7D,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,0BACRN,OAAQA,IACP9G,KAAK,SAAAsH,GACY,GAAdA,EAAK7G,MACP0C,EAAS0H,EAAevD,EAAKrH,OAG7BkD,EAAS2H,QAIZ,GASI,SAAS9E,EAASc,GACvB,OAAO,SAAS3D,EAAU4D,GACxB,OAAO,IAAIC,QAAQ,SAACC,EAASC,IATjC,SAAuBJ,GACrB,OAAOK,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,0BACRN,OAAQA,KAONmE,CAAcnE,GAAQ9G,KACpB,SAAAsH,GACoB,GAAdA,EAAK7G,OACPwG,EAAQK,EAAKnH,SACbgD,EAAS0H,EAAevD,EAAKrH,SAE7BiH,EAAOI,EAAKrH,KAAKE,SACjBgD,EAAS2H,EAAaxD,EAAKrH,KAAKE,YAGpC,SAAAM,GACEyG,EAAO,uBAsBV,SAASjB,EAAYa,EAAQoE,GAClC,OAAO,SAAS/H,EAAU4D,GACxB,OAAO,IAAIC,QAAQ,SAACC,EAASC,IAVjC,SAA0BJ,EAAQoE,GAChC,OAAO/D,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,6BACRN,OAAQA,EACRoE,OAAQA,KAONC,CAAiBrE,EAAQoE,GAAQlL,KAC/B,SAAAsH,GAhBR,IAA2BrH,EAiBC,GAAdqH,EAAK7G,MACPwG,EAAQK,EAAKrH,KAAKE,UAIlB+G,EAAOI,EAAKrH,KAAKE,SACjBgD,GAvBelD,EAuBYqH,EAAKrH,KAAKE,QAtBxCwH,YAAaH,IAAbG,CAAoD1H,OAyBrD,SAAAQ,GACEyG,EAAO,uBAUV,SAASkE,EAAuBnL,GACrC,OAAO0H,YAAaH,IAAbG,CAA0D1H,GA0B5D,SAASiG,EAAkBrG,GAChC,OAAO,SAASsD,EAAU4D,GACxB,IAAIc,EAAY,GACZW,EAAa,GACbC,EAAkB,GAClBC,EAAkB,GAClBC,EAAgB,GAChBC,EAAsB,GACtBO,EAAqB,GACrBkC,EAAc,GA0BlB,MAzB2C,qBAAhCxL,EAAoBzB,UAC7ByJ,EAAYhI,EAAoBzB,SAEW,qBAAlCyB,EAAoBlB,YAC7B0M,EAAcxL,EAAoBlB,WAEiB,qBAA1CkB,EAAoBxB,oBAC7BmK,EAAa3I,EAAoBxB,mBAEc,qBAAtCwB,EAAoBvB,gBAC7BmK,EAAkB5I,EAAoBvB,eAES,qBAAtCuB,EAAoBtB,gBAC7BmK,EAAkB7I,EAAoBtB,eAEO,qBAApCsB,EAAoBrB,cAC7BmK,EAAgB9I,EAAoBrB,aAEe,qBAA1CqB,EAAoBpB,oBAC7BmK,EAAsB/I,EAAoBpB,mBAEQ,qBAAzCoB,EAAoBnB,mBAC7ByK,EAAqBtJ,EAAoBnB,kBAGlB,KAArBmJ,EAAUkC,OACL/C,QAAQE,OAAO,oBAEG,KAAvBmE,EAAYtB,OACP/C,QAAQE,OAAO,sBAEE,KAAtBsB,EAAWuB,OACN/C,QAAQE,OAAO,8BAEO,KAA3BuB,EAAgBsB,OACX/C,QAAQE,OAAO,iCAEO,KAA3BwB,EAAgBqB,OACX/C,QAAQE,OAAO,iCAEK,KAAzByB,EAAcoB,OACT/C,QAAQE,OAAO,4BAEW,KAA/B0B,EAAoBmB,OACf/C,QAAQE,OAAO,mCAEjB,IAAIF,QAAQ,SAACC,EAASC,GAC3B/D,EAAS9B,eAhFf,SACEwG,EACAW,EACAC,EACAC,EACAC,EACAC,EACAO,EACAkC,GAEA,OAAOlE,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,mCACRhJ,QAASyJ,EACTxJ,kBAAmBmK,EACnBlK,cAAemK,EACflK,cAAemK,EACflK,YAAamK,EACblK,kBAAmBmK,EACnBlK,iBAAkByK,EAClBxK,UAAW0M,IA8DTC,CACEzD,EACAW,EACAC,EACAC,EACAC,EACAC,EACAO,EACAkC,GACArL,KACA,SAAAuL,GAlGD,IAAkCtL,EAmG/BkD,EAASoE,eACQ,GAAbgE,EAAI9K,OACNwG,EAAQsE,EAAItL,MACZkD,GAtG6BlD,EAsGKsL,EAAItL,KArGzC0H,YAAaH,KAAbG,CAA4D1H,MAuGzDkD,EAASiI,EAAuBG,EAAItL,QAGxC,SAAAQ,GACE0C,EAASoE,eACTpE,EAASiI,EAAuB,yBAOnC,SAASI,EAA6BvL,GAC3C,OAAO0H,YAAaH,KAAbG,CAAyD1H,GAY3D,SAASkG,IACd,OAAO,SAAShD,EAAU4D,GACxB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B/D,EAAS9B,eARN8F,YAAS,OAAQ,GAAI,CAC1BC,OAAQ,oCAQwBpH,KAC5B,SAAAuL,GAfD,IAAoCtL,EAgBhB,GAAbsL,EAAI9K,OACNwG,EAAQsE,EAAItL,MACZkD,EAASqI,EAA6BD,EAAItL,OACvCsL,EAAItL,KAAKwL,QACVtI,EAuBP,SAASuI,EAA2BC,GAAY,IAALC,EAAKC,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAH,EAClD,OAAO,SAAU1I,EAAU4D,GACzB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzB,IAAIJ,EAAS6E,EAAMC,GAAGG,QACtB5I,EAAS9B,eAXjB,SAAwCyF,GACtC,OAAOK,YAAS,OAAQ,GAAI,CAC1BC,OAAS,6BACThJ,QAAS0I,IASLkF,CAA8BlF,GAAQ9G,KACpC,SAACsH,GACC,GAAyB,qBAAdA,EAAKrH,MAA4D,qBAA7BqH,EAAKrH,KAAKgM,gBAAkC3E,EAAKrH,KAAKgM,eAAeR,OAAS,EAAG,CACnHnE,EAAKrH,KAAhB,IACIiM,EAAgBC,UAAU7E,EAAKrH,KAAKgM,eAAe,CAAC,QAAQ,CAAC,SACjEN,EAAMC,GAAGQ,eAAiBF,EAAc,GAAGG,MAAQH,EAAc,GAAGG,KAAKC,aACzEnJ,EAASqI,EAA6BG,IAExCxI,EAASoE,eACNoE,EAAMF,SAAWG,GAClBzI,EAASuI,EAA0BC,EAAOC,KAG9C,SAACnL,GACC0C,EAASoE,eACNoE,EAAMF,SAAWG,GAClBzI,EAASuI,EAA0BC,EAAOC,SA5CjCF,CAA0BH,EAAItL,QAGzCkD,GAvB+BlD,EAuBKsL,EAAItL,KAtB3C0H,YAAaH,KAAbG,CAAuD1H,KAwBtDkD,EAASoE,gBAEX,SAAA9G,GACE8L,QAAQC,IAAI,QAAS/L,GACrB0C,EAASoE","file":"static/js/44.2eac32f9.chunk.js","sourcesContent":["import React from \"react\";\nimport Dialog from \"material-ui/Dialog\";\nimport TextField from \"material-ui/TextField\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { notify } from \"../../../services/notify\";\nimport { DateField } from \"react-date-picker\";\nimport ToggleButton from \"react-toggle-button\";\n// import \"react-date-picker/index.css\";\nimport { CONFIG } from \"../../../config/index\";\nimport Button from \"../../../components/generic/buttons/Button\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport Header from \"../../../components/generic/Header\";\nimport { withRouter } from \"react-router\";\nimport ButtonRaised from \"../../../components/generic/buttons/ButtonRaised\";\nimport SignaturePad from \"signature_pad\";\nimport * as actions from \"../../../redux/actions\";\nimport * as actionsUsersList from \"../../../redux/generic/actions/usersList\";\nimport * as actionsManageUsers from \"../../../redux/manageUsers/actions/manageUsers\";\n\nlet signaturePad;\nclass FormAddNewEmployeeDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n      user_id: \"\",\n      permanent_address: \"\",\n      emergency_ph1: \"\",\n      emergency_ph2: \"\",\n      blood_group: \"\",\n      medical_condition: \"\",\n      holding_comments: \"\",\n      signature: \"\"\n    };\n    this.callAddNewEmployeeDetails = this.callAddNewEmployeeDetails.bind(this);\n    this.handleCanvas = this.handleCanvas.bind(this);\n  }\n\n  handleCanvas() {\n    signaturePad = new SignaturePad(document.getElementById(\"signature-pad\"), {\n      backgroundColor: \"rgba(255, 255, 255, 0)\",\n      penColor: \"rgb(0, 0, 0)\",\n      onEnd: () => {\n        localStorage.setItem(\"signature\", signaturePad.toDataURL());\n        this.setState({\n          signature: localStorage.signature\n        });\n      }\n    });\n  }\n  componentWillMount() {\n    this.props.onUsersList();\n  }\n  handleCancelButton() {\n    signaturePad.clear();\n  }\n  callAddNewEmployeeDetails(new_profile_details) {\n    this.props.onAddNewUserDetails(new_profile_details).then(\n      data => {\n        notify(\"Success!!\", data.message, \"success\");\n        this.props.history.push(`/add_documents/${this.props.params.id}`);\n      },\n      error => {\n        notify(\"error\", error, \"error\");\n      }\n    );\n  }\n  render() {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header\n            pageTitle={\"Add New Employee Details\"}\n            showLoading={this.props.frontend.show_loading}\n          />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"col-md-6 input-wrapper\">\n                <TextField\n                  floatingLabelText=\"Permanent Address\"\n                  floatingLabelFixed\n                  fullWidth\n                  onChange={e =>\n                    this.setState({ permanent_address: e.target.value })\n                  }\n                  value={this.state.permanent_address}\n                />\n              </div>\n              <div className=\"col-md-6 input-wrapper\">\n                <TextField\n                  type=\"number\"\n                  floatingLabelText=\"Phone No\"\n                  floatingLabelFixed\n                  fullWidth\n                  onChange={e =>\n                    this.setState({ emergency_ph1: e.target.value })\n                  }\n                  value={this.state.emergency_ph1}\n                />\n              </div>\n\n              <div className=\"col-md-6 input-wrapper\">\n                <TextField\n                  type=\"number\"\n                  floatingLabelText=\"Emergency Contact No\"\n                  floatingLabelFixed\n                  fullWidth\n                  onChange={e =>\n                    this.setState({ emergency_ph2: e.target.value })\n                  }\n                  value={this.state.emergency_ph2}\n                />\n              </div>\n              <div className=\"col-md-6 input-wrapper\">\n                Blood Group\n                <select\n                  className=\"form-control\"\n                  ref=\"blood_group\"\n                  onChange={e => this.setState({ blood_group: e.target.value })}\n                  value={this.state.blood_group}\n                >\n                  <option disabled>--select blood group--</option>\n                  <option value=\"0\">B+ </option>\n                  <option value=\"1\">O+</option>\n                  <option value=\"2\">AB+</option>\n                  <option value=\"3\">A+</option>\n                  <option value=\"4\">B- </option>\n                  <option value=\"5\">O-</option>\n                  <option value=\"6\">AB-</option>\n                  <option value=\"7\">A-</option>\n                </select>\n              </div>\n              <div className=\"col-md-8 input-wrapper\">\n                <TextField\n                  floatingLabelText=\"Any Medical issues in past/present\"\n                  floatingLabelFixed\n                  fullWidth\n                  onChange={e =>\n                    this.setState({ medical_condition: e.target.value })\n                  }\n                  value={this.state.medical_condition}\n                />\n              </div>\n              <div className=\"col-md-8 input-wrapper\">\n                <TextField\n                  floatingLabelText=\"Employee Holding Comment\"\n                  floatingLabelFixed\n                  fullWidth\n                  onChange={e =>\n                    this.setState({\n                      holding_comments: e.target.value,\n                      user_id: this.props.params.id\n                    })\n                  }\n                  value={this.state.holding_comments}\n                />\n              </div>\n              <div className=\"col-md-8  input-wrapper\">\n                <label>Employee Signature</label>\n                <p>(Double-tap and hold then start drawing your signature)</p>\n                <canvas\n                  id=\"signature-pad\"\n                  onClick={this.handleCanvas}\n                  className=\"signature-pad\"\n                  style={{\n                    width: \"100%\",\n                    height: 200,\n                    border: \"1px solid rgba(80,80,80,0.6)\"\n                  }}\n                />\n                <ButtonRaised\n                  onClick={this.handleCancelButton}\n                  id=\"clear\"\n                  label={\"Clear\"}\n                />\n\n                <div className=\"row p-y\">\n                  <ButtonRaised\n                    className=\"col-xs-12 p-y-2 m-b-sm indigo\"\n                    onClick={() => this.callAddNewEmployeeDetails(this.state)}\n                    label={\"Next\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    manageUsers: state.manageUsers.toJS()\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onUsersList: () => {\n      return dispatch(actionsUsersList.get_users_list());\n    },\n    onAddNewUserDetails: new_profile_details => {\n      return dispatch(\n        actionsManageUsers.addNewUserDetails(new_profile_details)\n      );\n    }\n  };\n};\nconst AddNewEmployeeDetails = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(FormAddNewEmployeeDetails)\n);\n\nexport default AddNewEmployeeDetails;\n\nAddNewEmployeeDetails.PropTypes = {\n  onIsAlreadyLogin: PropTypes.func.isRequired,\n  usersList: PropTypes.object.isRequired,\n  onAddNewUserDetails: PropTypes.func.isRequired,\n  router: PropTypes.object.isRequired\n};\n","import React from \"react\";\nimport Dialog from \"material-ui/Dialog\";\nimport TextField from \"material-ui/TextField\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { notify } from \"../../../services/notify\";\nimport Menu from \"../../../components/generic/Menu\";\nimport { isNotUserValid } from \"../../../services/generic\";\nimport Header from \"../../../components/generic/Header\";\nimport { CONFIG } from \"../../../config/index\";\nimport { DateField } from \"react-date-picker\";\nimport AddNewEmployeeDetails from \"./FormAddNewEmployeeDetails\";\n// import \"react-date-picker/index.css\";\nimport { withRouter } from \"react-router\";\nimport CircularProgress from \"material-ui/CircularProgress\";\nimport Button from \"../../../components/generic/buttons/Button\";\nimport DatePicker from \"material-ui/DatePicker\";\nimport ButtonRaised from \"../../../components/generic/buttons/ButtonRaised\";\nimport * as actions from \"../../../redux/actions\";\nimport * as actionsUsersList from \"../../../redux/generic/actions/usersList\";\nimport * as actionsManageUsers from \"../../../redux/manageUsers/actions/manageUsers\";\n\nclass FormAddNewEmployee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n      loading: false,\n      dateofjoining: new Date(),\n      name: \"\",\n      user_id: \"\",\n      jobtitle: \"\",\n      gender: \"\",\n      dob: new Date(),\n      username: \"\",\n      training_month: \"\",\n      workemail: \"\"\n    };\n    this.callAddNewEmployee = this.callAddNewEmployee.bind(this);\n  }\n  componentWillMount() {\n    this.props.onUsersList();\n  }\n\n  callAddNewEmployee(newEmployeeDetails) {\n    this.setState({\n      loading: true\n    });\n    this.props.onAddNewEmployee(newEmployeeDetails).then(\n      data => {\n        notify(data.message);\n        this.props.onUsersList();\n        this.setState({\n          user_id: data.user_id\n        });\n        this.props.history.push(`/add_new_employee/${this.state.user_id}`);\n        let uname = this.props.usersList.username;\n      },\n      error => {\n        this.setState({\n          loading: false\n        });\n        notify(error);\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header\n            pageTitle={\"Add New Employee Details\"}\n            showLoading={this.props.frontend.show_loading}\n          />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <div className=\"col-md-1\" />\n                  <div className=\"text-danger\">\n\n                    <i>\n                      *Create a slack profile first and enter email in Work\n                      Email\n                    </i>\n                  </div>\n                  <div className=\"col-md-1\" />\n                  <div className=\"text-info\">\n                    *Default password is : {CONFIG.DEFAULT_PASSWORD}\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"row p-y\">\n                      <div className=\"col-md-12\">\n                        <div className=\"col-md-1 input-wrapper\" />\n                        <div className=\"col-md-4 input-wrapper\">\n                          Date of Joining\n                          <DatePicker\n                            hintText=\"Date of Joining\"\n                            value={this.state.dateofjoining}\n                            onChange={(event, date) => {\n                              this.setState({ dateofjoining: date });\n                            }}\n                          />\n                        </div>\n                        <div className=\"col-md-4 input-wrapper\">\n                          Date of Birth\n                          <DatePicker\n                            hintText=\"Date of Birth\"\n                            value={this.state.dob}\n                            onChange={(event, date) => {\n                              this.setState({ dob: date });\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row p-y\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"col-md-1 input-wrapper\" />\n                        <div className=\"col-md-4 input-wrapper\">\n                          Training Month\n                          <select\n                            className=\"form-control\"\n                            ref=\"training_month\"\n                            onChange={evt => {\n                              this.setState({\n                                training_month: evt.target.value\n                              });\n                            }}\n                          >\n                            <option disabled>--select month--</option>\n                            <option value=\"0\">0 month </option>\n                            <option value=\"1\">1 month</option>\n                            <option value=\"2\">2 month</option>\n                            <option value=\"3\">3 month</option>\n                            <option value=\"4\">4 month</option>\n                          </select>\n                        </div>\n                        <div className=\"col-md-4 p-y input-wrapper\">\n                          Gender\n                          <select\n                            className=\"form-control\"\n                            ref=\"gender\"\n                            onChange={e =>\n                              this.setState({ gender: e.target.value })\n                            }\n                            value={this.state.gender}\n                          >\n                            <option value=\"\">--Select gender--</option>\n                            <option value=\"Female\">Female</option>\n                            <option value=\"Male\">Male</option>\n                            <option value=\"Other\">Other</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row p-y\">\n                      <div className=\"col-xs-12\">\n                        <div className=\"col-md-1 input-wrapper\" />\n                        <div className=\"col-md-4 input-wrapper\">\n                          <TextField\n                            floatingLabelText=\"Name\"\n                            floatingLabelFixed\n                            fullWidth\n                            onChange={e =>\n                              this.setState({ name: e.target.value })\n                            }\n                            value={this.state.name}\n                          />\n                        </div>\n\n                        <div className=\"col-md-4 input-wrapper\">\n                          <TextField\n                            floatingLabelText=\"Job Title\"\n                            floatingLabelFixed\n                            fullWidth\n                            onChange={e =>\n                              this.setState({ jobtitle: e.target.value })\n                            }\n                            value={this.state.jobtitle}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-1 input-wrapper\" />\n                    <div className=\"col-md-4 input-wrapper\">\n                      <TextField\n                        floatingLabelText=\"UserName\"\n                        floatingLabelFixed\n                        fullWidth\n                        onChange={e =>\n                          this.setState({ username: e.target.value })\n                        }\n                        value={this.state.username}\n                      />\n                    </div>\n                    <div className=\"col-md-4 input-wrapper\">\n                      <TextField\n                      type=\"email\"\n                        floatingLabelText=\"Work Email\"\n                        floatingLabelFixed\n                        fullWidth\n                        onChange={e =>\n                          this.setState({ workemail: e.target.value })\n                        }\n                        value={this.state.workemail}\n                      />\n                    </div>\n                    <div className=\"col-xs-4 input-wrapper\" />\n                  </div>\n                  <br />\n                  <br />\n                  <div className=\"col-md-8  input-wrapper\">\n                    <div className=\"col-md-1 input-wrapper\" />\n                    {this.state.loading == false ? (\n                      <ButtonRaised\n                        className=\"col-xs-10 p-y-2 m-b-sm indigo\"\n                        onClick={() => this.callAddNewEmployee(this.state)}\n                        label={\"Next\"}\n                      />\n                    ) : (\n                      <CircularProgress />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    frontend: state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    manageUsers: state.manageUsers.toJS(),\n    usersList: state.usersList.toJS()\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onAddNewEmployee: newEmployeeDetails => {\n      return dispatch(actionsManageUsers.addNewEmployee(newEmployeeDetails));\n    },\n    onUsersList: () => {\n      return dispatch(actionsUsersList.get_users_list());\n    }\n  };\n};\n\nconst AddNewEmployee = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(FormAddNewEmployee)\n);\n\nexport default AddNewEmployee;\n\nAddNewEmployee.PropTypes = {\n  onIsAlreadyLogin: PropTypes.func.isRequired,\n  usersList: PropTypes.object.isRequired,\n  onAddNewEmployee: PropTypes.func.isRequired,\n  router: PropTypes.object.isRequired\n};\n","import { createAction } from \"redux-actions\";\nimport * as _ from \"lodash\";\nimport queue from \"async/queue\";\n\nimport { fireAjax } from \"../../../services/index\";\nimport { show_loading, hide_loading } from \"../../../redux/generic/actions/frontend\";\nimport * as constants from \"../../../redux/constants\";\nimport { func } from \"prop-types\";\nvar moment = require(\"moment\");\n\nexport function success_user_profile(data, username) {\n  return {\n    type: constants.ACTION_SUCCESS_USER_PROFILE,\n    payload: data,\n    username: username\n  };\n}\nexport function empty_user_profile(data) {\n  return createAction(constants.ACTION_EMPTY_USER_PROFILE)(data);\n}\nexport function error_user_profile(data) {\n  return createAction(constants.ACTION_ERROR_USER_PROFILE)(data);\n}\n\nfunction async_getUserProfileDetails(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_user_profile_detail_by_id\",\n    user_id: userid\n  });\n}\n\nexport function getUserProfileDetails(userid, username) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getUserProfileDetails(userid).then(\n        json => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(success_user_profile(json.data, username));\n          } else {\n            dispatch(empty_user_profile(json.data.message));\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_user_profile(\"error occurs!!!\"));\n        }\n      );\n    });\n  };\n}\n\n// -------update profile details\n\nexport function success_update_user_profile_details(data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_USER_PROFILE_DETAILS)(\n    data\n  );\n}\nexport function error_update_user_profile_details(data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_USER_PROFILE_DETAILS)(data);\n}\n\nfunction async_updateUserProfileDetails(\n  n_user_id,\n  n_name,\n  n_jobtitle,\n  n_team,\n  n_dateofjoining,\n  n_work_email,\n  n_other_email,\n  n_gender,\n  n_dob,\n  n_marital_status,\n  n_address1,\n  n_address2,\n  n_emergency_ph1,\n  n_emergency_ph2,\n  n_blood_group,\n  n_medical_condition,\n  n_training_completion_date,\n  n_termination_date,\n  n_holding_comments,\n  n_training_month,\n  n_send_slack_msg,\n  n_slack_msg\n) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_user_profile_detail_by_id\",\n    user_id: n_user_id,\n    marital_status: n_marital_status,\n    name: n_name,\n    jobtitle: n_jobtitle,\n    team: n_team,\n    dateofjoining: n_dateofjoining,\n    work_email: n_work_email,\n    other_email: n_other_email,\n    gender: n_gender,\n    dob: n_dob,\n    permanent_address: n_address2,\n    current_address: n_address1,\n    emergency_ph1: n_emergency_ph1,\n    emergency_ph2: n_emergency_ph2,\n    blood_group: n_blood_group,\n    medical_condition: n_medical_condition,\n    training_completion_date: n_training_completion_date,\n    termination_date: n_termination_date,\n    training_month: n_training_month,\n    holding_comments: n_holding_comments,\n    send_slack_msg: n_send_slack_msg,\n    slack_msg: n_slack_msg\n  });\n}\n\nexport function updateUserProfileDetails(new_profile_details) {\n  return function(dispatch, getState) {\n    let n_user_id = \"\";\n    let n_name = \"\";\n    let n_jobtitle = \"\";\n    let n_team = \"\";\n    let n_dateofjoining = \"\";\n    let n_work_email = \"\";\n    let n_other_email = \"\";\n    let n_gender = \"\";\n    let n_dob = \"\";\n    let n_marital_status = \"\";\n    let n_address1 = \"\";\n    let n_address2 = \"\";\n    let n_emergency_ph1 = \"\";\n    let n_emergency_ph2 = \"\";\n    let n_blood_group = \"\";\n    let n_medical_condition = \"\";\n    let n_send_slack_msg = new_profile_details.send_slack_msg;\n    let n_slack_msg = new_profile_details.slack_msg;\n    let n_training_completion_date = \"\";\n    let n_termination_date = \"\";\n    let n_holding_comments = \"\";\n    let n_training_month = \"\";\n\n    if (typeof new_profile_details.user_id !== \"undefined\") {\n      n_user_id = new_profile_details.user_id;\n    }\n    if (typeof new_profile_details.name !== \"undefined\") {\n      n_name = new_profile_details.name;\n    }\n    if (typeof new_profile_details.jobtitle !== \"undefined\") {\n      n_jobtitle = new_profile_details.jobtitle;\n    }\n    if (typeof new_profile_details.team !== \"undefined\") {\n      n_team = new_profile_details.team;\n    }\n    if (\n      typeof new_profile_details.dateofjoining !== \"undefined\" &&\n      new_profile_details.dateofjoining != null\n    ) {\n      n_dateofjoining = new_profile_details.dateofjoining;\n    }\n\n    if (\n      typeof new_profile_details.training_month !== \"undefined\" &&\n      new_profile_details.training_month != null\n    ) {\n      n_training_month = new_profile_details.training_month;\n    }\n\n    if (typeof new_profile_details.work_email !== \"undefined\") {\n      n_work_email = new_profile_details.work_email;\n    }\n    if (typeof new_profile_details.other_email !== \"undefined\") {\n      n_other_email = new_profile_details.other_email;\n    }\n    if (typeof new_profile_details.gender !== \"undefined\") {\n      n_gender = new_profile_details.gender;\n    }\n    if (\n      typeof new_profile_details.dob !== \"undefined\" &&\n      new_profile_details.dob != null\n    ) {\n      var mydate = new Date(new_profile_details.dob);\n      if (mydate) {\n        n_dob = moment(mydate).format(\"YYYY-MM-DD\");\n      }\n    }\n\n    if (typeof new_profile_details.marital_status !== \"undefined\") {\n      n_marital_status = new_profile_details.marital_status;\n    }\n\n    if (typeof new_profile_details.address1 !== \"undefined\") {\n      n_address1 = new_profile_details.address1;\n    }\n    if (typeof new_profile_details.address2 !== \"undefined\") {\n      n_address2 = new_profile_details.address2;\n    }\n    if (typeof new_profile_details.emergency_ph1 !== \"undefined\") {\n      n_emergency_ph1 = new_profile_details.emergency_ph1;\n    }\n    if (typeof new_profile_details.emergency_ph2 !== \"undefined\") {\n      n_emergency_ph2 = new_profile_details.emergency_ph2;\n    }\n    if (typeof new_profile_details.blood_group !== \"undefined\") {\n      n_blood_group = new_profile_details.blood_group;\n    }\n    if (typeof new_profile_details.medical_condition !== \"undefined\") {\n      n_medical_condition = new_profile_details.medical_condition;\n    }\n    if (\n      typeof new_profile_details.training_completion_date !== \"undefined\" &&\n      new_profile_details.training_completion_date != null\n    ) {\n      n_training_completion_date = new_profile_details.training_completion_date;\n    }\n    if (\n      typeof new_profile_details.termination_date !== \"undefined\" &&\n      new_profile_details.termination_date != null\n    ) {\n      n_termination_date = new_profile_details.termination_date;\n    }\n    if (typeof new_profile_details.holding_comments !== \"undefined\") {\n      n_holding_comments = new_profile_details.holding_comments;\n    }\n\n    if (n_user_id.trim() === \"\") {\n      return Promise.reject(\"User id is empty\");\n    }\n    if (n_name.trim() === \"\") {\n      return Promise.reject(\"Name is empty\");\n    }\n    if (n_jobtitle.trim() === \"\") {\n      return Promise.reject(\"Jobtitle is empty\");\n    }\n    if (n_dateofjoining.trim() === \"\") {\n      return Promise.reject(\"Joining date is empty\");\n    }\n    if (n_work_email.trim() === \"\") {\n      return Promise.reject(\"Work email is empty\");\n    }\n    if (n_other_email.trim() === \"\") {\n      return Promise.reject(\"Personal email is empty\");\n    }\n    if (n_gender.trim() === \"\") {\n      return Promise.reject(\"Gender is empty\");\n    }\n    if (n_dob.trim() === \"\") {\n      return Promise.reject(\"Date of birth is empty\");\n    }\n    if (n_marital_status.trim() === \"\") {\n      return Promise.reject(\"Marital status not selected\");\n    }\n    if (n_address1.trim() === \"\") {\n      return Promise.reject(\"Current address is empty\");\n    }\n    if (n_address2.trim() === \"\") {\n      return Promise.reject(\"Permanent address is empty\");\n    }\n    if (n_emergency_ph1.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 1 is empty\");\n    }\n    if (n_emergency_ph2.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 2 is empty\");\n    }\n    if (n_blood_group.trim() === \"\") {\n      return Promise.reject(\"Blood group not selected\");\n    }\n    if (n_medical_condition.trim() === \"\") {\n      return Promise.reject(\"Any medical conditions is empty\");\n    }\n\n    if (n_training_month.trim() === \"\") {\n      return Promise.reject(\"Training month is Empty\");\n    }\n    // if (n_training_completion_date.trim() === \"\") {\n    //   return Promise.reject('Training Completion Date  is empty')\n    // }\n    // if (n_termination_date.trim() === \"\") {\n    //   return Promise.reject('Termination date empty')\n    // }\n    // if (n_holding_comments.trim() === \"\") {\n    //   return Promise.reject('Holding amount comment is empty')\n    // }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_updateUserProfileDetails(\n        n_user_id,\n        n_name,\n        n_jobtitle,\n        n_team,\n        n_dateofjoining,\n        n_work_email,\n        n_other_email,\n        n_gender,\n        n_dob,\n        n_marital_status,\n        n_address1,\n        n_address2,\n        n_emergency_ph1,\n        n_emergency_ph2,\n        n_blood_group,\n        n_medical_condition,\n        n_training_completion_date,\n        n_termination_date,\n        n_holding_comments,\n        n_training_month,\n        n_send_slack_msg,\n        n_slack_msg\n      ).then(\n        json => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(getUserProfileDetails(n_user_id));\n            dispatch(success_update_user_profile_details(json.data.message));\n          } else {\n            dispatch(error_update_user_profile_details(json.data.message));\n            reject(json.data)\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_update_user_profile_details(\"error occurs!!!\"));\n        }\n      );\n    });\n  };\n}\n\n// -------add New employee\n\nexport function success_add_new_employee(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_EMPLOYEE)(data);\n}\n\nexport function error_add_new_employee(data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_EMPLOYEE)(data);\n}\n\nfunction async_addNewEmployee(\n  n_dateofjoining,\n  n_name,\n  n_jobtitle,\n  n_gender,\n  n_dob,\n  n_username,\n  n_training_month,\n  n_workemail\n) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"add_new_employee\",\n    dateofjoining: n_dateofjoining,\n    name: n_name,\n    jobtitle: n_jobtitle,\n    gender: n_gender,\n    dob: n_dob,\n    username: n_username,\n    training_month: n_training_month,\n    workemail: n_workemail\n  });\n}\n\nexport function addNewEmployee(new_employee_details) {\n  return function(dispatch, getState) {\n    let n_dateofjoining = \"\";\n    let n_name = \"\";\n    let n_jobtitle = \"\";\n    let n_gender = \"\";\n    let n_dob = \"\";\n    let n_username = \"\";\n    let n_training_month = \"\";\n    let n_workemail = \"\";\n\n    if (\n      typeof new_employee_details.dateofjoining === \"undefined\" ||\n      new_employee_details.dateofjoining == \"\"\n    ) {\n      return Promise.reject(\"Date of Joining is empty\");\n    } else {\n      n_dateofjoining = new_employee_details.dateofjoining;\n    }\n\n    if (\n      typeof new_employee_details.name === \"undefined\" ||\n      new_employee_details.name == \"\"\n    ) {\n      return Promise.reject(\"Name is empty\");\n    } else {\n      n_name = new_employee_details.name;\n    }\n\n    if (\n      typeof new_employee_details.jobtitle === \"undefined\" ||\n      new_employee_details.jobtitle == \"\"\n    ) {\n      return Promise.reject(\"Job Title is empty\");\n    } else {\n      n_jobtitle = new_employee_details.jobtitle;\n    }\n\n    if (\n      typeof new_employee_details.gender === \"undefined\" ||\n      new_employee_details.gender == \"\"\n    ) {\n      return Promise.reject(\"Gender is empty\");\n    } else {\n      n_gender = new_employee_details.gender;\n    }\n\n    if (\n      typeof new_employee_details.dob === \"undefined\" ||\n      new_employee_details.dob == \"\"\n    ) {\n      return Promise.reject(\"Date of birth is empty\");\n    } else {\n      n_dob = new_employee_details.dob;\n    }\n\n    if (\n      typeof new_employee_details.gender === \"undefined\" ||\n      new_employee_details.gender == \"\"\n    ) {\n      return Promise.reject(\"Gender is empty\");\n    } else {\n      n_gender = new_employee_details.gender;\n    }\n\n    if (\n      typeof new_employee_details.username === \"undefined\" ||\n      new_employee_details.username == \"\"\n    ) {\n      return Promise.reject(\"Username is empty\");\n    } else {\n      n_username = new_employee_details.username;\n    }\n\n    if (\n      typeof new_employee_details.training_month === \"undefined\" ||\n      new_employee_details.training_month == \"\"\n    ) {\n      return Promise.reject(\"training month is empty\");\n    } else {\n      n_training_month = new_employee_details.training_month;\n    }\n\n    if (\n      typeof new_employee_details.workemail === \"undefined\" ||\n      new_employee_details.workemail == \"\"\n    ) {\n      return Promise.reject(\"Work email is empty\");\n    } else {\n      n_workemail = new_employee_details.workemail;\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_addNewEmployee(\n        n_dateofjoining,\n        n_name,\n        n_jobtitle,\n        n_gender,\n        n_dob,\n        n_username,\n        n_training_month,\n        n_workemail\n      ).then(\n        json => {\n          dispatch(hide_loading()); // hide loading icon\n          if (json.error == 0) {\n            dispatch(success_add_new_employee(json.data));\n            resolve(json.data);\n          } else {\n            dispatch(error_add_new_employee(json.data.message));\n            reject(json.data.message);\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_add_new_employee(\"error occurs!!!\"));\n          reject(\"error occurs!!!\");\n        }\n      );\n    });\n  };\n}\n// ---------get user document\n\nexport function success_user_document(data) {\n  return createAction(constants.ACTION_SUCCESS_USER_DOCUMENT)(data);\n}\nexport function error_user_document(data) {\n  return createAction(constants.ACTION_ERROR_USER_DOCUMENT)(data);\n}\n\nfunction async_getUserDocument(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_user_document_by_id\",\n    user_id: userid\n  });\n}\n\nexport function getUserDocument(userid) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_getUserDocument(userid).then(\n        json => {\n          dispatch(hide_loading());\n          if (json.error == 0) {\n            dispatch(success_user_document(json.data));\n            // resolve('disabled')\n          } else {\n            dispatch(error_user_document(json.data.message));\n            // reject('response with Error')\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(error_user_document(\"error occurs!!!\"));\n          // reject('error occurs!!')\n        }\n      );\n    });\n  };\n}\n\n// ------Delete user document\nfunction async_deleteDocument(doc_id) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"delete_user_document\",\n    id: doc_id\n  });\n}\n\nexport function deleteDocument(doc_id) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      async_deleteDocument(doc_id).then(\n        json => {\n          dispatch(hide_loading());\n          if (json.error == 0) {\n            resolve(json.data.message);\n          } else {\n            reject(json.data.message);\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\n// --------changeEmployeeStatus Enable/Disable user\n\nfunction async_changeEmployeeStatus(userid, status) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"change_employee_status\",\n    user_id: userid,\n    status: status\n  });\n}\n\nexport function changeEmployeeStatus(userid, status) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      async_changeEmployeeStatus(userid, status).then(\n        json => {\n          if (json.error === 0) {\n            resolve(\"User disabled\");\n          } else {\n            reject(json.data.message);\n          }\n        },\n        error => {\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\nfunction successGetStep(data) {\n  return createAction(constants.ACTION_SUCCESS_GET_STEPS)(data);\n}\nfunction errorGetStep(data) {\n  return createAction(constants.ACTION_ERROR_GET_STEPS)(data);\n}\n\nvar callApiSteps = queue(function(userid, dispatch, callback) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_employee_life_cycle\",\n    userid: userid\n  }).then(json => {\n    if (json.error == 0) {\n      dispatch(successGetStep(json.data));\n    } else {\n      // reject(json.data.message);\n      dispatch(errorGetStep());\n    }\n  });\n  // callback(json);\n}, 1);\n\nfunction asyncGetSteps(userid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_employee_life_cycle\",\n    userid: userid\n  });\n}\n\nexport function getSteps(userid) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      asyncGetSteps(userid).then(\n        json => {\n          if (json.error == 0) {\n            resolve(json.message);\n            dispatch(successGetStep(json.data));\n          } else {\n            reject(json.data.message);\n            dispatch(errorGetStep(json.data.message));\n          }\n        },\n        error => {\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\nfunction successEmployeeStep(data) {\n  return createAction(constants.ACTION_SUCCESS_EMPLOYEE_STEPS)(data);\n}\nfunction errorEmployeeStep(data) {\n  return createAction(constants.ACTION_ERROR_EMPLOYEE_STEPS)(data);\n}\n\nfunction asyncChangeSteps(userid, stepid) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_employee_life_cycle\",\n    userid: userid,\n    stepid: stepid\n  });\n}\n\nexport function changeSteps(userid, stepid) {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      asyncChangeSteps(userid, stepid).then(\n        json => {\n          if (json.error == 0) {\n            resolve(json.data.message);\n            // dispatch(getSteps(userid));\n            // dispatch(successEmployeeStep(json.data));\n          } else {\n            reject(json.data.message);\n            dispatch(errorEmployeeStep(json.data.message));\n          }\n        },\n        error => {\n          reject(\"error occurs!!\");\n        }\n      );\n    });\n  };\n}\n\nexport function successAddNewUserDetails(data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_NEW_USER_DETAILS)(data);\n}\nexport function errorAddNewUserDetails(data) {\n  return createAction(constants.ACTION_ERROR_ADD_NEW_USER_DETAILS)(data);\n}\n\nfunction async_addNewUserDetails(\n  n_user_id,\n  n_address2,\n  n_emergency_ph1,\n  n_emergency_ph2,\n  n_blood_group,\n  n_medical_condition,\n  n_holding_comments,\n  n_signature\n) {\n  return fireAjax(\"POST\", \"\", {\n    action: \"update_user_profile_detail_by_id\",\n    user_id: n_user_id,\n    permanent_address: n_address2,\n    emergency_ph1: n_emergency_ph1,\n    emergency_ph2: n_emergency_ph2,\n    blood_group: n_blood_group,\n    medical_condition: n_medical_condition,\n    holding_comments: n_holding_comments,\n    signature: n_signature\n  });\n}\n\nexport function addNewUserDetails(new_profile_details) {\n  return function(dispatch, getState) {\n    let n_user_id = \"\";\n    let n_address2 = \"\";\n    let n_emergency_ph1 = \"\";\n    let n_emergency_ph2 = \"\";\n    let n_blood_group = \"\";\n    let n_medical_condition = \"\";\n    let n_holding_comments = \"\";\n    let n_signature = \"\";\n    if (typeof new_profile_details.user_id !== \"undefined\") {\n      n_user_id = new_profile_details.user_id;\n    }\n    if (typeof new_profile_details.signature !== \"undefined\") {\n      n_signature = new_profile_details.signature;\n    }\n    if (typeof new_profile_details.permanent_address !== \"undefined\") {\n      n_address2 = new_profile_details.permanent_address;\n    }\n    if (typeof new_profile_details.emergency_ph1 !== \"undefined\") {\n      n_emergency_ph1 = new_profile_details.emergency_ph1;\n    }\n    if (typeof new_profile_details.emergency_ph2 !== \"undefined\") {\n      n_emergency_ph2 = new_profile_details.emergency_ph2;\n    }\n    if (typeof new_profile_details.blood_group !== \"undefined\") {\n      n_blood_group = new_profile_details.blood_group;\n    }\n    if (typeof new_profile_details.medical_condition !== \"undefined\") {\n      n_medical_condition = new_profile_details.medical_condition;\n    }\n    if (typeof new_profile_details.holding_comments !== \"undefined\") {\n      n_holding_comments = new_profile_details.holding_comments;\n    }\n\n    if (n_user_id.trim() === \"\") {\n      return Promise.reject(\"User id is empty\");\n    }\n    if (n_signature.trim() === \"\") {\n      return Promise.reject(\"signature is empty\");\n    }\n    if (n_address2.trim() === \"\") {\n      return Promise.reject(\"Permanent address is empty\");\n    }\n    if (n_emergency_ph1.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 1 is empty\");\n    }\n    if (n_emergency_ph2.trim() === \"\") {\n      return Promise.reject(\"Emmergency contact 2 is empty\");\n    }\n    if (n_blood_group.trim() === \"\") {\n      return Promise.reject(\"Blood group not selected\");\n    }\n    if (n_medical_condition.trim() === \"\") {\n      return Promise.reject(\"Any medical conditions is empty\");\n    }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_addNewUserDetails(\n        n_user_id,\n        n_address2,\n        n_emergency_ph1,\n        n_emergency_ph2,\n        n_blood_group,\n        n_medical_condition,\n        n_holding_comments,\n        n_signature\n      ).then(\n        res => {\n          dispatch(hide_loading()); // hide loading icon\n          if (res.error == 0) {\n            resolve(res.data);\n            dispatch(successAddNewUserDetails(res.data));\n          } else {\n            dispatch(errorAddNewUserDetails(res.data));\n          }\n        },\n        error => {\n          dispatch(hide_loading()); // hide loading icon\n          dispatch(errorAddNewUserDetails(\"error occurs!!!\"));\n        }\n      );\n    });\n  };\n}\n\nexport function successGetAllEmployeeDetails(data) {\n  return createAction(constants.SUCCESS_GET_ALL_EMPLOYEE_DETAILS)(data);\n}\nexport function errorGetAllEmployeeDetails(data) {\n  return createAction(constants.ERROR_GET_ALL_EMPLOYEE_DETAILS)(data);\n}\n\nfunction async_getAllEmployeeDetails(){\n  return fireAjax(\"POST\", \"\", {\n    action: \"get_enabled_users_brief_details\"\n  })\n}\n \nexport function getAllEmployeeDetails() {\n  return function(dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getAllEmployeeDetails().then(\n        res => {\n          if (res.error == 0) {\n            resolve(res.data);\n            dispatch(successGetAllEmployeeDetails(res.data));\n            if(res.data.length){\n              dispatch(getEmployeesSalaryDetails(res.data));\n            }\n          } else {\n            dispatch(errorGetAllEmployeeDetails(res.data));\n          }\n          dispatch(hide_loading()); // hide loading icon\n        },\n        error => {\n          console.log('error', error);\n          dispatch(hide_loading()); // hide loading icon\n        }\n      )\n    })\n  }\n}\n\nfunction async_get_user_salary_details (userid) {\n  return fireAjax('POST', '', {\n    action:  'get_user_salary_info_by_id',\n    user_id: userid\n  });\n}\n\nexport function getEmployeesSalaryDetails (users, i=0) {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n        let userid = users[i].user_Id;\n        dispatch(show_loading()); // show loading icon\n        async_get_user_salary_details(userid).then(\n          (json) => {\n            if (typeof json.data !== 'undefined' && typeof json.data.salary_details !== 'undefined' && json.data.salary_details.length > 0) {\n              let data = json.data;\n              let orderedSalary = _.orderBy(json.data.salary_details,['date'],['desc']);\n              users[i].current_salary = orderedSalary[0].test && orderedSalary[0].test.total_salary;\n              dispatch(successGetAllEmployeeDetails(users));\n            }\n            dispatch(hide_loading()); // hide loading icon\n            if(users.length > ++i){\n              dispatch(getEmployeesSalaryDetails(users, i));\n            }\n          },\n          (error) => {\n            dispatch(hide_loading()); // hide loading icon\n            if(users.length > ++i){\n              dispatch(getEmployeesSalaryDetails(users, i));\n            }\n          }\n        );\n    });\n  };\n}\n"],"sourceRoot":""}