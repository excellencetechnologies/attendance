{"version":3,"sources":["modules/manageRoles/components/AddRolesForm.jsx","modules/manageRoles/components/DisplayRolesLists.jsx","components/generic/UsersRolesList.jsx","redux/manageRoles/actions/manageRoles.jsx","modules/manageRoles/containers/manageRoles.jsx","components/generic/AlertNotification.jsx"],"names":["AddRolesForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","baseRoleId","name","description","error","handleOpen","bind","assertThisInitialized","handleClose","handleSubmit","setState","_this$state","valid","_","isEmpty","callAddNewRole","_this2","optionMenu","map","displayData","roles","role","index","react_default","a","createElement","id","concat","key","MenuItem_default","value","primaryText","className","buttons","onClick","label","Dialog_default","title","modal","onRequestClose","contentClassName","autoScrollBodyContent","SelectField_default","fullWidth","onChange","event","TextField_default","floatingLabelText","floatingLabelFixed","e","target","errorText","React","Component","PropTypes","shape","Array","isRequired","func","DisplayRolesList","_ref","handleChange","handleChangeNotification","handleDelete","rolesData","rolesList","rolesId","rolePages","role_pages","v","k","pageId","roleActions","actions_list","val","ke","actionId","type","checked","is_assigned","roleNotification","role_notifications","notificationId","collapseLink","style","border","Link","data-toggle","data-parent","to","confirm","then","res","object","UsersRolesList","users","usersList","undefined","users_list","data","rolesName","user","avatar","profileImae","userId","user_Id","roleName","role_name","roleLabelValue","slack_profile","charAt","Avatar_default","image_72","src","selectMenu","jobtitle","errorAddNewRole","createAction","constants","addNewRole","new_role","dispatch","getState","Promise","reject","resolve","show_loading","fireAjax","action","base_role_id","asyncAddNewRole","json","hide_loading","message","getRolesList","emptyRolesList","errorUpdateRoles","updateRoles","roleUpdateDetails","trim","role_id","page_id","action_id","notification_id","asyncUpdateRoles","errorUpdateUserRole","updateUserRole","userRoleUpdateDetails","roleId","user_id","asyncUpdateUserRole","deleteRole","asyncDeleteRole","ManageRoles","onIsAlreadyLogin","status_message","updateRole","onUserClick","onRolesList","loggedUser","location","history","manageRoles","isNotValid","isNotUserValid","pathname","status","push","redirectTo","newRoleDetails","onAddNewRole","id2","id1","onUpdateRole","onUpdateUserRole","onDelete","notify","targetId","clone","page","Menu","AlertNotification","Header","pageTitle","showLoading","frontend","AddRolesForm_AddRolesForm","DisplayRolesLists","handleClick","click","deleteId","generic_UsersRolesList","VisibleManageUsers","connect","toJS","logged_user","userLogin","actions","actionsManageRoles","RouterVisibleManageUsers","withRouter","onFetchUserPolicyDocument","route","path","string","isLoggedIn","bool","policy_documents","policyDocuments","router","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","lodash__WEBPACK_IMPORTED_MODULE_2__","lodash__WEBPACK_IMPORTED_MODULE_2___default","material_ui_Snackbar__WEBPACK_IMPORTED_MODULE_3__","material_ui_Snackbar__WEBPACK_IMPORTED_MODULE_3___default","showAlert","handleRequestClose","alertMessage","autoHideDuration"],"mappings":"qVASqBA,cACnB,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,MAAa,EACbC,WAAa,GACbC,KAAa,GACbC,YAAa,GACbC,MAAa,CAACH,WAAY,GAAIC,KAAM,GAAIC,YAAa,KAEvDX,EAAKa,WAAab,EAAKa,WAAWC,KAAhBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAClBA,EAAKgB,YAAchB,EAAKgB,YAAYF,KAAjBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACnBA,EAAKiB,aAAejB,EAAKiB,aAAaH,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAXFA,4EAclBG,KAAKe,SAAS,CACZV,MAAa,EACbC,WAAa,GACbC,KAAa,GACbC,YAAa,2CAIfR,KAAKe,SAAS,CAACV,MAAM,2CAEP,IAAAW,EACwBhB,KAAKI,MAAtCE,EADSU,EACTV,WAAYC,EADHS,EACGT,KAAMC,EADTQ,EACSR,YACnBC,EAAQ,CAACH,WAAY,GAAIC,KAAM,GAAIC,YAAa,IAChDS,GAAQ,EACRC,IAAEC,QAAQZ,KACZU,GAAQ,EACRR,EAAMF,KAAO,2BAEXW,IAAEC,QAAQX,KACZS,GAAQ,EACRR,EAAMD,YAAc,2BAEtBR,KAAKe,SAAS,CAACN,UACXQ,IACFjB,KAAKJ,MAAMwB,eAAe,CAACd,aAAYC,OAAMC,gBAC7CR,KAAKa,gDAGC,IAAAQ,EAAArB,KACJsB,EAAaJ,IAAEK,IAAIvB,KAAKJ,MAAM4B,YAAYC,MAAO,SAACC,EAAMC,GAAP,OACnDC,EAAAC,EAAAC,cAAA,OAAKC,GAAE,GAAAC,OAAKN,EAAKnB,KAAV,SAAuB0B,IAAKN,GACjCC,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUI,IAAKN,EAAOQ,MAAOT,EAAKK,GAAIK,YAAaV,EAAKnB,UAG5D,OACEqB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,gBAAgBN,GAAG,eAChCH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQD,UAAU,cAAcN,GAAG,WAAWQ,QAASvC,KAAKU,WAAY8B,MAAM,iBAC9EZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACEE,GAAG,kBACHW,MAAM,WACNC,OAAO,EACPtC,KAAML,KAAKI,MAAMC,KACjBuC,eAAgB5C,KAAKa,YACrBgC,iBAAiB,kBACjBC,uBAAqB,GAAClB,EAAAC,EAAAC,cAAA,WACtBF,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CAAamB,WAAS,EAACjB,GAAG,gBAAgBI,MAAOnC,KAAKI,MAAME,WAAY2C,SAAU,SAACC,EAAOvB,EAAOQ,GAAYd,EAAKN,SAAS,CAACT,WAAY6B,MACtIP,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,MAAO,GAAIC,YAAY,uBACjCR,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACLT,IAGLM,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACEE,GAAG,YACHqB,kBAAkB,OAClBC,oBAAkB,EAACL,WAAS,EAC5BC,SAAU,SAACK,GAAD,OAAQjC,EAAKN,SAAS,CAACR,KAAM+C,EAAEC,OAAOpB,SAChDA,MAAOnC,KAAKI,MAAMG,KAClBiD,UAAWxD,KAAKI,MAAMK,MAAMF,OAE9BqB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACEE,GAAG,YACHqB,kBAAkB,cAClBC,oBAAkB,EAACL,WAAS,EAC5BC,SAAU,SAACK,GAAD,OAAQjC,EAAKN,SAAS,CAACP,YAAa8C,EAAEC,OAAOpB,SACvDA,MAAOnC,KAAKI,MAAMI,YAClBgD,UAAWxD,KAAKI,MAAMK,MAAMD,cAE9BoB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAcD,UAAU,0BAA0BN,GAAG,qBAAqBQ,QAAS,kBAAMlB,EAAKP,gBAAgB0B,MAAO,6BAlFrFiB,IAAMC,WAyFhD/D,EAAagE,UAAY,CACvBnC,YAAamC,IAAUC,MAAM,CAC3BnC,MAAOkC,IAAUE,QAChBC,WACH1C,eAAgBuC,IAAUI,KAAKD,0BChG3BE,EAAmB,SAAAC,GAAyE,IAAvEzC,EAAuEyC,EAAvEzC,YAAa0C,EAA0DD,EAA1DC,aAAcC,EAA4CF,EAA5CE,yBAA0BC,EAAkBH,EAAlBG,aAC1EC,EAAY7C,EAAYC,MACxB6C,EAAYpD,IAAEK,IAAI8C,EAAW,SAAClC,EAAOF,GACvC,IAAIsC,EAAUpC,EAAMJ,GAChByC,EAAYtD,IAAEK,IAAIY,EAAMsC,WAAY,SAACC,EAAGC,GAC1C,IAAIC,EAASF,EAAE3C,GACX8C,EAAc3D,IAAEK,IAAImD,EAAEI,aAAc,SAACC,EAAKC,GAC5C,IAAIC,EAAWF,EAAIhD,GACnB,OACEH,EAAAC,EAAAC,cAAA,MAAIG,IAAK+C,GACPpD,EAAAC,EAAAC,cAAA,SAAOoD,KAAK,WAAWnD,GAAI,SAAWgD,EAAIxE,KAAM4B,MAAO4C,EAAIxE,KAAM4E,QAASJ,EAAIK,YAAanC,SAAU,SAACK,GAAQY,EAAaZ,EAAG2B,EAAUV,IAAatC,IAAKgD,IAD5J,IAC0KF,EAAIxE,QAIlL,OACEqB,EAAAC,EAAAC,cAAA,MAAIG,IAAK0C,GACP/C,EAAAC,EAAAC,cAAA,SAAOoD,KAAK,WAAWnD,GAAI,SAAW2C,EAAEnE,KAAM4B,MAAOuC,EAAEnE,KAAM4E,QAAST,EAAEU,YAAanC,SAAU,SAACK,GAAQY,EAAaZ,EAAGsB,EAAQL,IAAatC,IAAK2C,IADpJ,IACgKF,EAAEnE,KAChKqB,EAAAC,EAAAC,cAAA,MAAIO,UAAU,iBAAiBwC,MAIjCQ,EAAmBnE,IAAEK,IAAIY,EAAMmD,mBAAoB,SAACZ,EAAGC,GACzD,IAAIY,EAAiBb,EAAE3C,GACvB,OACEH,EAAAC,EAAAC,cAAA,OAAKG,IAAK0C,GACR/C,EAAAC,EAAAC,cAAA,SACEoD,KAAK,WACL/C,MAAOuC,EAAEnE,KACT4E,QAAST,EAAEU,YACXnC,SAAU,WAAQkB,EAAyBoB,EAAgBhB,IAAatC,IAAKsD,IALjF,IAMMb,EAAEnE,KACNqB,EAAAC,EAAAC,cAAA,cAIF0D,EAAe,OAASjB,EAC5B,OACE3C,EAAAC,EAAAC,cAAA,OAAKO,UAAU,sBAAsBN,GAAE,GAAAC,OAAKG,EAAM5B,KAAX,SAAwBkF,MAAO,CAACC,OAAU,GAAIzD,IAAKA,GACxFL,EAAAC,EAAAC,cAAA,OAAKO,UAAU,wBACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,sBACbT,EAAAC,EAAAC,cAAA,QAAMO,UAAU,qBACdT,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMC,cAAY,WAAWC,cAAY,aAAaC,GAAE,IAAA9D,OAAMwD,IAC5D5D,EAAAC,EAAAC,cAAA,MAAIO,UAAU,2BAA2BN,GAAE,GAAAC,OAAKG,EAAM5B,KAAX,UAAyB4B,EAAM5B,MAC1EqB,EAAAC,EAAAC,cAAA,QAAMO,UAAU,qBAAqBF,EAAM3B,eAG/CoB,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMG,GAAG,gBAAgB/D,GAAE,GAAAC,OAAKG,EAAM5B,KAAX,WAA0B8B,UAAU,sDAC7DE,QAAS,WACPwD,YAAQ,iBAAkB,mCAAoC,WAAWC,KAAK,SAACC,GACzEA,GACF7B,EAAaG,OAGhB3C,EAAAC,EAAAC,cAAA,2BAGTF,EAAAC,EAAAC,cAAA,OAAKC,GAAIyD,EAAcnD,UAAU,4CAC/BT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,6BACbT,EAAAC,EAAAC,cAAA,SAAOO,UAAU,yBACfT,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,6BAAwBF,EAAAC,EAAAC,cAAA,8BACnCF,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,UAAK0C,IAAoB5C,EAAAC,EAAAC,cAAA,UAAKuD,WAOzD,OACEzD,EAAAC,EAAAC,cAAA,OAAKO,UAAU,eACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,wBAAwBN,GAAG,aAAauC,KAK9CN,IAEfA,EAAiBL,UAAY,CAC3BnC,YAAamC,IAAUC,MAAM,CAC3BnC,MAAOkC,IAAUuC,OAAOpC,aACvBA,WACHI,aAA0BP,IAAUI,KAAKD,WACzCK,yBAA0BR,IAAUI,KAAKD,WACzCM,aAA0BT,IAAUI,KAAKD,kCCnFvCqC,EAAiB,SAAAlC,GAAuB,IAArBmC,EAAqBnC,EAArBmC,MAAOnD,EAAcgB,EAAdhB,SACxBoD,EAAY,GAChB,QAAyBC,IAArBF,EAAMG,WAA0B,CAClC,IAAIC,EAAOJ,EAAMG,WAAWC,KACxBC,EAAYL,EAAM3E,MACtB4E,EAAYnF,IAAEK,IAAIiF,EAAM,SAACE,EAAMzE,GAC7B,IAAI0E,EAAS,GACTC,EAAc,GACdC,EAASH,EAAKI,QACdC,EAAWL,EAAKM,UAChBC,EAAiBrF,EAAAC,EAAAC,cAAA,QAAMO,UAAU,uBAAuBN,GAAE,GAAAC,OAAKC,EAAL,UAAiBL,EAAAC,EAAAC,cAAA,iBAA1D,MAAyEiF,EAAzE,IAAoF,IAAInF,EAAAC,EAAAC,cAAA,QAAMS,QAAS,WAAQU,EAAS4D,EAAQ,MAASxE,UAAU,yCAAyCK,MAAM,iBACtM,OAAbqE,GAAkC,IAAbA,IACvBE,EAAiBrF,EAAAC,EAAAC,cAAA,QAAMO,UAAU,uBAAsBT,EAAAC,EAAAC,cAAA,iBAAtC,WAEdZ,IAAEC,QAAQuF,EAAKQ,gBAIlBN,EAA2B,MAAbF,EAAKnG,KAAemG,EAAKnG,KAAK4G,OAAO,GAAK,GACxDR,EAAS/E,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,KAAS+E,KAJlBA,EAAcF,EAAKQ,cAAcG,SACjCV,EAAS/E,EAAAC,EAAAC,cAAA,OAAKwF,IAAKV,KAKrB,IAAItF,EAAaJ,IAAEK,IAAIkF,EAAW,SAAClG,EAAMoB,GACvC,OAAQC,EAAAC,EAAAC,cAAA,UAAQG,IAAKN,EAAOI,GAAE,GAAAC,OAAKzB,EAAKA,KAAV,QAAsB4B,MAAO5B,EAAKwB,IAAMxB,EAAKA,QAEzEgH,EAAa3F,EAAAC,EAAAC,cAAA,UAAQG,IAAK4E,EAAQtG,KAAMsG,EAAQ9E,GAAE,GAAAC,OAAKC,EAAL,WAAmBgB,SAAU,SAACK,GAAQL,EAAS4D,EAAQvD,EAAEC,OAAOpB,QAAWE,UAAU,yCAAwCT,EAAAC,EAAAC,cAAA,UAAQK,MAAM,MAAd,iBAA0Cb,GAC7N,OACEM,EAAAC,EAAAC,cAAA,OAAKO,UAAU,qBAAqBN,GAAE,GAAAC,OAAKC,EAAL,SAAiBA,IAAKA,GAC1DL,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aAAYT,EAAAC,EAAAC,cAAA,QAAMO,UAAU,eAAesE,IAC1D/E,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAA,YAAO4E,EAAKnG,MACZqB,EAAAC,EAAAC,cAAA,SAAOO,UAAU,4BAA4BqE,EAAKc,UACjDP,EACAM,MAMX,OACE3F,EAAAC,EAAAC,cAAA,OAAKO,UAAU,+CAA+CN,GAAG,aAC9DsE,IAKQF,IAEfA,EAAexC,UAAY,CACzByC,MAAOzC,IAAUC,MAAM,CACrB2C,WAAY5C,IAAU7D,SACrBgE,WACHb,SAAUU,IAAUI,KAAKD,wDC/CpB,SAAS2D,EAAiBjB,GAC/B,OAAOkB,YAAaC,IAAbD,CAA8ClB,GAYhD,SAASoB,EAAYC,GAC1B,OAAO,SAAUC,EAAUC,GACzB,IAAIzH,EAAauH,EAASvH,WACtBC,EAAO,GACPC,EAAc,GAElB,MAA6B,qBAAlBqH,EAAStH,MAAyC,IAAjBsH,EAAStH,KAC5CyH,QAAQC,OAAO,kBAEtB1H,EAAOsH,EAAStH,KAGkB,qBAAzBsH,EAASrH,aAAuD,IAAxBqH,EAASrH,YACnDwH,QAAQC,OAAO,yBAEtBzH,EAAcqH,EAASrH,YAGlB,IAAIwH,QAAQ,SAACE,EAASD,GAC3BH,EAASK,eA5Bf,SAA0B7H,EAAYC,EAAMC,GAC1C,OAAO4H,YAAS,OAAQ,GAAI,CAC1BC,OAAgB,YAChBC,aAAgBhI,EAChBC,KAAgBA,EAChBC,YAAgBA,IAwBd+H,CAAgBjI,EAAYC,EAAMC,GAAawF,KAAK,SAACwC,GArCpD,IAA4BhC,EAsC3BsB,EAASW,eACS,GAAdD,EAAK/H,OACPqH,GAxCyBtB,EAwCEgC,EAAKE,QAvCjChB,YAAaC,KAAbD,CAAgDlB,KAwC/CsB,EAASa,MAETb,EAASL,EAAgBe,EAAKE,WAE/B,SAACjI,GACFqH,EAASW,eACTX,EAASL,EAAgB,oBACzBQ,EAAO,0BAwBR,SAASU,IACd,OAAO,SAAUb,EAAUC,GACzB,OAAO,IAAIC,QAAQ,SAACE,EAASD,GAC3BH,EAASK,eARNC,YAAS,OAAQ,GAAI,CAC1BC,OAAU,mBAQYrC,KAAK,SAACwC,GAtBzB,IAA2BhC,EAuB1BsB,EAASW,eACS,GAAdD,EAAK/H,MACPqH,GAzBwBtB,EAyBEgC,EAAKhC,KAxBhCkB,YAAaC,KAAbD,CAAkDlB,KA0BjDsB,EAvBH,SAAyBtB,GAC9B,OAAOkB,YAAaC,IAAbD,CAAgDlB,GAsBtCoC,CAAe,MAEzB,SAACnI,GArBH,IAAyB+F,EAsBxBsB,EAASW,eACTX,GAvBwBtB,EAuBA,GAtBvBkB,YAAaC,IAAbD,CAAgDlB,UAgClD,SAASqC,EAAkBrC,GAChC,OAAOkB,YAAaC,IAAbD,CAAkDlB,GAapD,SAASsC,EAAaC,GAC3B,OAAO,SAAUjB,EAAUC,GACzB,IAAIxD,EAAU,GACVU,EAAW,GACXL,EAAS,GACTW,EAAiB,GAOrB,MALgD,qBAArCwD,EAAkBxD,iBAAkCA,EAAiBwD,EAAkBxD,gBACzD,qBAA9BwD,EAAkBxE,UAA2BA,EAAUwE,EAAkBxE,SAC1C,qBAA/BwE,EAAkB9D,WAA4BA,EAAW8D,EAAkB9D,UAC9C,qBAA7B8D,EAAkBnE,SAA0BA,EAASmE,EAAkBnE,QAE3D,KAAnBL,EAAQyE,OAAwBhB,QAAQC,OAAO,oBAE5C,IAAID,QAAQ,WACjBF,EAASK,eAzBf,SAA2B5C,EAAgBhB,EAASU,EAAUL,GAC5D,OAAOwD,YAAS,OAAQ,GAAI,CAC1BC,OAAmB,cACnBY,QAAmB1E,EACnB2E,QAAmBtE,EACnBuE,UAAmBlE,EACnBmE,gBAAmB7D,IAoBjB8D,CAAiB9D,EAAgBhB,EAASU,EAAUL,GAAQoB,KAAK,SAACwC,GAjCjE,IAA6BhC,EAkC5BsB,EAASW,eACS,GAAdD,EAAK/H,OACPqH,EAASa,KACTb,GArC0BtB,EAqCEgC,EAAKE,QApClChB,YAAaC,KAAbD,CAAoDlB,MAsCnDsB,EAASe,EAAiBL,EAAKE,WAEhC,SAACjI,GACFqH,EAASW,eACTX,EAASe,EAAiB,yBAS3B,SAASS,EAAqB9C,GACnC,OAAOkB,YAAaC,KAAbD,CAAuDlB,GAWzD,SAAS+C,EAAgBC,GAC9B,OAAO,SAAU1B,EAAUC,GACzB,IAAI0B,EAAS,GACT5C,EAAS,GAKb,MAH4C,qBAAjC2C,EAAsBC,SAA0BA,EAASD,EAAsBC,QAC9C,qBAAjCD,EAAsB3C,SAA0BA,EAAS2C,EAAsB3C,QAEpE,KAAlB4C,EAAOT,OAAwB,KACb,KAAlBnC,EAAOmC,OAAwBhB,QAAQC,OAAO,oBAE3C,IAAID,QAAQ,WACjBF,EAASK,eApBf,SAA8BtB,EAAQ4C,GACpC,OAAOrB,YAAS,OAAQ,GAAI,CAC1BC,OAAW,mBACXqB,QAAW7C,EACXoC,QAAWQ,IAiBTE,CAAoB9C,EAAQ4C,GAAQzD,KAAK,SAACwC,GA5BzC,IAAgChC,EA6B/BsB,EAASW,eACS,GAAdD,EAAK/H,MACPqH,GA/B6BtB,EA+BEgC,EAAKE,QA9BrChB,YAAaC,KAAbD,CAAyDlB,KAgCxDsB,EAASwB,EAAoBd,EAAKE,WAEnC,SAACjI,GACFqH,EAASW,eACTX,EAASwB,EAAoB,yBAa9B,SAASM,EAAY7H,GAC1B,OAAO,SAAU+F,EAAUC,GACzB,MAAkB,qBAAPhG,GAA4B,IAANA,EAAmBiG,QAAQC,OAAO,sBAC5D,IAAID,QAAQ,SAACE,EAASD,GAC3BH,EAASK,eAXf,SAA0BpG,GACxB,OAAOqG,YAAS,OAAQ,GAAI,CAC1BC,OAAW,cACXY,QAAWlH,IAST8H,CAAgB9H,GAAIiE,KAAK,SAACwC,GACxBV,EAASW,eACS,GAAdD,EAAK/H,OACPyH,EAAQM,EAAKE,SACbZ,EAASa,MAETV,EAAOO,EAAKE,UAEb,SAACjI,GACFqH,EAASW,eACTR,EAAO,4BCnMT6B,cACJ,SAAAA,EAAalK,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8J,IAClBjK,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgK,GAAA3J,KAAAH,KAAMJ,KACDA,MAAMmK,mBACXlK,EAAKO,MAAQ,CACX4J,eAAgB,GAChB3F,UAAgB,GAChB4F,WAAgB,CAAC1F,QAAS,GAAIU,SAAU,GAAIL,OAAQ,GAAIW,eAAgB,KAE1E1F,EAAKuB,eAAiBvB,EAAKuB,eAAeT,KAApBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACtBA,EAAKsE,yBAA2BtE,EAAKsE,yBAAyBxD,KAA9Bb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAChCA,EAAKqK,YAAcrK,EAAKqK,YAAYvJ,KAAjBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACnBA,EAAKqE,aAAerE,EAAKqE,aAAavD,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAXFA,oFAclBG,KAAKJ,MAAMuK,gEAEcvK,GAAO,IAC3BwK,EAA0DxK,EAA1DwK,WAAYC,EAA8CzK,EAA9CyK,SAAUC,EAAoC1K,EAApC0K,QAAsBjG,EAAczE,EAA3B2K,YAAalG,UAC7CmG,EAAaC,YAAeJ,EAASK,SAAUN,GAC/CI,EAAWG,QACbL,EAAQM,KAAKJ,EAAWK,YAEtBxG,IAAcrE,KAAKI,MAAMiE,WAC3BrE,KAAKe,SAAS,CACZsD,qDAIUyG,GACd9K,KAAKJ,MAAMmL,aAAaD,oDAEAE,EAAKC,GAAK,IAC7BhB,EAAcjK,KAAKI,MAAnB6J,WACLA,EAAW1F,QAAU0G,EACrBhB,EAAW1E,eAAiByF,EAC5BhL,KAAKJ,MAAMsL,aAAajB,uCAEbpD,EAAQ4C,GACnB,IAAID,EAAwB,CAAC3C,OAAQA,EAAQ4C,OAAQA,GACtC,OAAXA,IACFzJ,KAAKJ,MAAMuL,iBAAiB3B,GAC5BxJ,KAAKJ,MAAMuK,oDAGDpI,GACZ/B,KAAKJ,MAAMwL,SAASrJ,GAAIiE,KAAK,SAACQ,GAAW6E,YAAO,WAAY7E,EAAM,YAAe,SAAC/F,GAAY4K,YAAO,SAAU5K,EAAO,gDAE1G6C,EAAGgI,EAAU7B,GACzB,IAAIpF,EAAYrE,KAAKI,MAAMiE,UACvB4F,EAAa/I,IAAEqK,MAAMvL,KAAKI,MAAM6J,YACpC/I,IAAEK,IAAI8C,EAAU5C,MAAO,SAACC,EAAMO,GACxBP,EAAKK,KAAO0H,GACdvI,IAAEK,IAAIG,EAAK+C,WAAY,SAAC+G,EAAM7G,GACxB6G,EAAKzJ,KAAOuJ,GACdE,EAAKpG,YAAc9B,EAAEC,OAAO4B,QAC5B8E,EAAWrF,OAAS0G,EACpBpK,IAAEK,IAAIiK,EAAK1G,aAAc,SAACuD,EAAQrD,GAChCqD,EAAOjD,YAAc9B,EAAEC,OAAO4B,WAGhCjE,IAAEK,IAAIiK,EAAK1G,aAAc,SAACuD,EAAQrD,GAC5BqD,EAAOtG,KAAOuJ,IAChBjD,EAAOjD,YAAc9B,EAAEC,OAAO4B,QAC9B8E,EAAWhF,SAAWqG,SAOlCrB,EAAW1F,QAAUkF,EACrBzJ,KAAKe,SAAS,CAACsD,cACfrE,KAAKJ,MAAMsL,aAAajB,oCAEhB,IAAA5I,EAAArB,KACR,OACE4B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2J,EAAA,EAASzL,KAAKJ,OACfgC,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAmBhD,QAAS1I,KAAKJ,MAAM2K,YAAYP,iBACnDpI,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UAAUM,UAAU,4BAA4BX,KAAK,QAC3DE,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAQC,UAAW,eAAgBC,YAAa7L,KAAKJ,MAAMkM,SAAS3D,eACpEvG,EAAAC,EAAAC,cAAA,OAAKO,UAAU,WAAWN,GAAG,QAC3BH,EAAAC,EAAAC,cAAA,OAAKO,UAAU,WACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAACiK,EAAD,CAAc3K,eAAgBpB,KAAKoB,eAAgBI,YAAaxB,KAAKI,MAAMiE,aAE7EzC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,MAAMN,GAAG,aACtBH,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACkK,EAAD,CACExK,YAAaxB,KAAKI,MAAMiE,UACxB4H,YAAa,SAAClK,GAAD,OAAQV,EAAK6K,MAAMnK,IAChCmC,aAAclE,KAAKkE,aACnBC,yBAA0B,SAACoB,EAAgBhB,GAAjB,OAA6BlD,EAAK8C,yBAAyBoB,EAAgBhB,IACrGH,aAAc,SAACrC,GAASV,EAAK+C,aAAarC,GAAKV,EAAKN,SAAS,CAACoL,SAAUpK,QAG5EH,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACsK,EAAD,CAAgBhG,MAAOpG,KAAKI,MAAMiE,UAAWpB,SAAU,SAAC4D,EAAQ4C,GAAapI,EAAK6I,YAAYrD,EAAQ4C,mBAlG9FhG,IAAMC,WAsHhC,IAWM2I,EAAqBC,YApB3B,SAA0BlM,GACxB,MAAO,CACL0L,SAAa1L,EAAM0L,SAASS,OAC5BnC,WAAahK,EAAMoM,YAAYC,UAC/BpG,UAAajG,EAAMiG,UAAUkG,OAC7BhC,YAAanK,EAAMmK,YAAYgC,SAIR,SAACzE,GAC1B,MAAO,CACLiC,iBAAkB,WAAQ,OAAOjC,EAAS4E,qBAC1C3B,aAAkB,SAACD,GAAqB,OAAOhD,EAAS6E,EAA8B7B,KACtFX,YAAkB,WAAQ,OAAOrC,EAAS6E,MAC1CzB,aAAkB,SAACnC,GAAwB,OAAOjB,EAAS6E,EAA+B5D,KAC1FoC,iBAAkB,SAAC3B,GAA4B,OAAO1B,EAAS6E,EAAkCnD,KACjG4B,SAAkB,SAACrJ,GAAS,OAAO+F,EAAS6E,EAA8B5K,OAInDuK,CAA6CxC,GAClE8C,GAA2BC,YAAWR,GAC7BO,aAEf9C,EAAYnG,UAAY,CACtBoG,iBAA2BpG,IAAUI,KAAKD,WAC1CgJ,0BAA2BnJ,IAAUI,KAAKD,WAC1CqG,YAA2BxG,IAAUI,KAAKD,WAC1CiJ,MAA2BpJ,IAAUC,MAAM,CACzCoJ,KAAMrJ,IAAUsJ,OAAOnJ,aACtBA,WACHsG,WAAYzG,IAAUC,MAAM,CAC1BsJ,WAAYvJ,IAAUwJ,KAAKrJ,WAC3B0C,KAAY7C,IAAUuC,OAAOpC,aAC5BA,WACHsJ,iBAAkBzJ,IAAUC,MAAM,CAChCyJ,gBAAiB1J,IAAUuC,SAC1BpC,WACHuC,UAAW1C,IAAUuC,OAAOpC,WAC5BwJ,OAAW3J,IAAUuC,OAAOpC,8CCpK9B,IAAAyJ,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,GAAAM,EAAAN,EAAAE,EAAAG,GAAAE,EAAAP,EAAA,KAAAQ,EAAAR,EAAAE,EAAAK,GAKMrC,EAAoB,SAAAzH,GAAkC,IAAhCyE,EAAgCzE,EAAhCyE,QACtBuF,GADsDhK,EAAxBiK,oBAClB,GACZC,EAAe,GAMnB,OALKjN,IAAEC,QAAQuH,KACbuF,GAAY,EACZE,EAAezF,GAIf+E,EAAA5L,EAAAC,cAACkM,EAAAnM,EAAD,CACExB,KAAM4N,EACNvF,QAASyF,EACTC,iBAAkB,OAKxB1C,EAAkB/H,UAAY,CAC5B+E,QAAS/E,IAAUsJ,OAAOnJ,YAEb4H","file":"static/js/32.8317a58c.chunk.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport PropTypes from 'prop-types';\nimport Dialog from 'material-ui/Dialog';\nimport {Button, ButtonRaised} from '../../../components/generic/buttons/';\n\nexport default class AddRolesForm extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      open:        false,\n      baseRoleId:  '',\n      name:        '',\n      description: '',\n      error:       {baseRoleId: '', name: '', description: ''}\n    };\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleOpen () {\n    this.setState({\n      open:        true,\n      baseRoleId:  '',\n      name:        '',\n      description: ''\n    });\n  }\n  handleClose () {\n    this.setState({open: false});\n  }\n  handleSubmit () {\n    let {baseRoleId, name, description} = this.state;\n    let error = {baseRoleId: '', name: '', description: ''};\n    let valid = true;\n    if (_.isEmpty(name)) {\n      valid = false;\n      error.name = 'This field is required.';\n    }\n    if (_.isEmpty(description)) {\n      valid = false;\n      error.description = 'This field is required.';\n    }\n    this.setState({error});\n    if (valid) {\n      this.props.callAddNewRole({baseRoleId, name, description});\n      this.handleClose();\n    }\n  }\n  render () {\n    let optionMenu = _.map(this.props.displayData.roles, (role, index) => (\n      <div id={`${role.name}_list`} key={index}>\n        <MenuItem key={index} value={role.id} primaryText={role.name} />\n      </div>\n    ));\n    return (\n      <div className=\"col-sm-12 p-y\" id=\"role_button\">\n        <Button className=\"btn-fw info\" id=\"add_role\" onClick={this.handleOpen} label=\"Add New Role\" />\n        <Dialog\n          id=\"add_role_dialog\"\n          title=\"Add Role\"\n          modal={false}\n          open={this.state.open}\n          onRequestClose={this.handleClose}\n          contentClassName=\"dialog-add-role\"\n          autoScrollBodyContent><br />\n          <SelectField fullWidth id=\"role_selector\" value={this.state.baseRoleId} onChange={(event, index, value) => { this.setState({baseRoleId: value}); }}>\n            <MenuItem value={''} primaryText=\" Select Base Role \" />\n            <div id=\"role_list\">\n              {optionMenu}\n            </div>\n          </SelectField>\n          <TextField\n            id=\"role_name\"\n            floatingLabelText=\"Name\"\n            floatingLabelFixed fullWidth\n            onChange={(e) => (this.setState({name: e.target.value}))}\n            value={this.state.name}\n            errorText={this.state.error.name}\n          />\n          <TextField\n            id=\"role_desc\"\n            floatingLabelText=\"Description\"\n            floatingLabelFixed fullWidth\n            onChange={(e) => (this.setState({description: e.target.value}))}\n            value={this.state.description}\n            errorText={this.state.error.description}\n          />\n          <ButtonRaised className=\"col-md-12 m-y-sm indigo\" id=\"role_submit_button\" onClick={() => this.handleSubmit()} label={'Submit New Role'} />\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nAddRolesForm.PropTypes = {\n  displayData: PropTypes.shape({\n    roles: PropTypes.Array\n  }).isRequired,\n  callAddNewRole: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {confirm} from '../../../services/notify';\nimport _ from 'lodash';\n\nconst DisplayRolesList = ({displayData, handleChange, handleChangeNotification, handleDelete}) => {\n  let rolesData = displayData.roles;\n  let rolesList = _.map(rolesData, (value, key) => {\n    let rolesId = value.id;\n    let rolePages = _.map(value.role_pages, (v, k) => {\n      let pageId = v.id;\n      let roleActions = _.map(v.actions_list, (val, ke) => {\n        let actionId = val.id;\n        return (\n          <li key={ke}>\n            <input type=\"checkbox\" id={'check_' + val.name} value={val.name} checked={val.is_assigned} onChange={(e) => { handleChange(e, actionId, rolesId); }} key={actionId} /> {val.name}\n          </li>\n        );\n      });\n      return (\n        <li key={k}>\n          <input type=\"checkbox\" id={'check_' + v.name} value={v.name} checked={v.is_assigned} onChange={(e) => { handleChange(e, pageId, rolesId); }} key={pageId} /> {v.name}\n          <ul className=\"m-b-xs m-l-md\">{roleActions}</ul>\n        </li>\n      );\n    });\n    let roleNotification = _.map(value.role_notifications, (v, k) => {\n      let notificationId = v.id;\n      return (\n        <div key={k}>\n          <input\n            type=\"checkbox\"\n            value={v.name}\n            checked={v.is_assigned}\n            onChange={() => { handleChangeNotification(notificationId, rolesId); }} key={notificationId}\n          /> {v.name}\n          <br />\n        </div>\n      );\n    });\n    let collapseLink = 'coll' + rolesId;\n    return (\n      <div className=\"panel panel-default\" id={`${value.name}_body`} style={{'border': 0}} key={key}>\n        <div className=\"panel-heading p-b-lg\">\n          <div className=\"panel-title p-b-md\">\n            <span className=\"col-xs-8 col-sm-9\">\n              <Link data-toggle=\"collapse\" data-parent=\"#accordion\" to={`#${collapseLink}`} >\n                <h4 className=\"m-b-xs text-lg col-xs-10\" id={`${value.name}_span`}>{value.name}</h4>\n                <span className=\"col-xs-12 text-sm\">{value.description}</span>\n              </Link>\n            </span>\n            <Link to=\"/manage_roles\" id={`${value.name}_delete`} className=\"col-xs-4 col-sm-3 m-t-sm p-t-sm text-sm text-danger\"\n              onClick={() => {\n                confirm('Are you sure ?', 'Do you want to Delete the Role ?', 'warning').then((res) => {\n                  if (res) {\n                    handleDelete(rolesId);\n                  }\n                });\n              }}><i>Delete Role</i></Link>\n          </div>\n        </div>\n        <div id={collapseLink} className=\"table-responsive panel-collapse collapse\">\n          <div className=\"navside panel-body p-a-xs\">\n            <table className=\"table table-condensed\">\n              <thead><tr><th>Pages - Actions</th><th> Notification </th></tr></thead>\n              <tbody><tr><td><ul>{rolePages}</ul></td><td>{roleNotification}</td></tr></tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  });\n  return (\n    <div className=\"row box p-t\">\n      <div className=\"col-xs-12 panel-group\" id=\"accordion\">{rolesList}</div>\n    </div>\n  );\n};\n\nexport default DisplayRolesList;\n\nDisplayRolesList.PropTypes = {\n  displayData: PropTypes.shape({\n    roles: PropTypes.object.isRequired\n  }).isRequired,\n  handleChange:             PropTypes.func.isRequired,\n  handleChangeNotification: PropTypes.func.isRequired,\n  handleDelete:             PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Avatar from 'material-ui/Avatar';\n\nlet UsersRolesList = ({users, onChange}) => {\n  let usersList = '';\n  if (users.users_list !== undefined) {\n    let data = users.users_list.data;\n    let rolesName = users.roles;\n    usersList = _.map(data, (user, key) => {\n      let avatar = '';\n      let profileImae = '';\n      let userId = user.user_Id;\n      let roleName = user.role_name;\n      let roleLabelValue = <span className=\"text-success text-sm\" id={`${key}_span`}><b>Role</b> : {roleName} {' '}<span onClick={() => { onChange(userId, '0'); }} className='glyphicon glyphicon-remove text-danger' title=\"Remove Role\"></span></span>;\n      if (roleName === null || roleName === 0) {\n        roleLabelValue = <span className=\"text-danger text-sm\"><b>Role</b> : -- </span>;\n      }\n      if (!_.isEmpty(user.slack_profile)) {\n        profileImae = user.slack_profile.image_72;\n        avatar = <img src={profileImae} />;\n      } else {\n        profileImae = user.name != null ? user.name.charAt(0) : '';\n        avatar = <Avatar>{profileImae}</Avatar>;\n      }\n      let optionMenu = _.map(rolesName, (name, index) => {\n        return (<option key={index} id={`${name.name}_val`} value={name.id} >{name.name}</option>);\n      });\n      let selectMenu = <select key={userId} name={userId} id={`${key}_change`} onChange={(e) => { onChange(userId, e.target.value); }} className=\"form-control text-muted text-ellipsis\"><option value=\"-1\"> CHANGE ROLE </option>{optionMenu}</select>;\n      return (\n        <div className=\"b-x p-a-sm pointer\" id={`${key}_list`} key={key}>\n          <div className=\"list-left\"><span className=\"w-40 avatar\">{avatar}</span></div>\n          <div className=\"list-body\">\n            <span>{user.name}</span>\n            <small className=\"text-muted text-ellipsis\">{user.jobtitle}</small>\n            {roleLabelValue}\n            {selectMenu}\n          </div>\n        </div>\n      );\n    });\n  }\n  return (\n    <div className=\"box responsive-p-x-sm p-y clear fixed-height\" id=\"user_list\">\n      {usersList}\n    </div>\n  );\n};\n\nexport default UsersRolesList;\n\nUsersRolesList.PropTypes = {\n  users: PropTypes.shape({\n    users_list: PropTypes.Object\n  }).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import {createAction} from 'redux-actions';\nimport {fireAjax} from '../../../services/index';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\nimport * as constants from '../../../redux/constants';\n\nexport function successAddNewRole (data) {\n  return createAction(constants.ACTION_SUCCESS_ADD_ROLE)(data);\n}\n\nexport function errorAddNewRole (data) {\n  return createAction(constants.ACTION_ERROR_ADD_ROLE)(data);\n}\n\nfunction asyncAddNewRole (baseRoleId, name, description) {\n  return fireAjax('POST', '', {\n    'action':       'add_roles',\n    'base_role_id': baseRoleId,\n    'name':         name,\n    'description':  description\n  });\n}\n\nexport function addNewRole (new_role) {\n  return function (dispatch, getState) {\n    let baseRoleId = new_role.baseRoleId;\n    let name = '';\n    let description = '';\n\n    if (typeof new_role.name === 'undefined' || new_role.name == '') {\n      return Promise.reject('Name is empty');\n    } else {\n      name = new_role.name;\n    }\n\n    if (typeof new_role.description === 'undefined' || new_role.description == '') {\n      return Promise.reject('Description is empty');\n    } else {\n      description = new_role.description;\n    }\n\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      asyncAddNewRole(baseRoleId, name, description).then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          dispatch(successAddNewRole(json.message));\n          dispatch(getRolesList());\n        } else {\n          dispatch(errorAddNewRole(json.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorAddNewRole('error occurs!!!'));\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n\nexport function successRolesList (data) {\n  return createAction(constants.ACTION_SUCCESS_LIST_ROLES)(data);\n}\n\nexport function emptyRolesList (data) {\n  return createAction(constants.ACTION_EMPTY_LIST_ROLES)(data);\n}\n\nexport function errorRolesList (data) {\n  return createAction(constants.ACTION_ERROR_LIST_ROLES)(data);\n}\n\nfunction asyncGetRolesList () {\n  return fireAjax('POST', '', {\n    'action': 'list_all_roles'\n  });\n}\n\nexport function getRolesList () {\n  return function (dispatch, getState) {\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      asyncGetRolesList().then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          dispatch(successRolesList(json.data));\n        } else {\n          dispatch(emptyRolesList([]));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorRolesList([]));\n      }\n\t\t\t);\n    });\n  };\n}\n\nexport function successUpdateRoles (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_ROLES)(data);\n}\nexport function errorUpdateRoles (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_ROLES)(data);\n}\n\nfunction asyncUpdateRoles (notificationId, rolesId, actionId, pageId) {\n  return fireAjax('POST', '', {\n    'action':          'update_role',\n    'role_id':         rolesId,\n    'page_id':         pageId,\n    'action_id':       actionId,\n    'notification_id': notificationId\n  });\n}\n\nexport function updateRoles (roleUpdateDetails) {\n  return function (dispatch, getState) {\n    let rolesId = '';\n    let actionId = '';\n    let pageId = '';\n    let notificationId = '';\n\n    if (typeof roleUpdateDetails.notificationId !== 'undefined') { notificationId = roleUpdateDetails.notificationId; }\n    if (typeof roleUpdateDetails.rolesId !== 'undefined') { rolesId = roleUpdateDetails.rolesId; }\n    if (typeof roleUpdateDetails.actionId !== 'undefined') { actionId = roleUpdateDetails.actionId; }\n    if (typeof roleUpdateDetails.pageId !== 'undefined') { pageId = roleUpdateDetails.pageId; }\n\n    if (rolesId.trim() === '') { return Promise.reject('User id is empty'); }\n\n    return new Promise(() => {\n      dispatch(show_loading());\n      asyncUpdateRoles(notificationId, rolesId, actionId, pageId).then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          dispatch(getRolesList());\n          dispatch(successUpdateRoles(json.message));\n        } else {\n          dispatch(errorUpdateRoles(json.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorUpdateRoles('error occurs!!!'));\n      });\n    });\n  };\n}\n\nexport function successUpdateUserRole (data) {\n  return createAction(constants.ACTION_SUCCESS_UPDATE_USER_ROLES)(data);\n}\nexport function errorUpdateUserRole (data) {\n  return createAction(constants.ACTION_ERROR_UPDATE_USER_ROLES)(data);\n}\n\nfunction asyncUpdateUserRole (userId, roleId) {\n  return fireAjax('POST', '', {\n    'action':  'assign_user_role',\n    'user_id': userId,\n    'role_id': roleId\n  });\n}\n\nexport function updateUserRole (userRoleUpdateDetails) {\n  return function (dispatch, getState) {\n    let roleId = '';\n    let userId = '';\n\n    if (typeof userRoleUpdateDetails.roleId !== 'undefined') { roleId = userRoleUpdateDetails.roleId; }\n    if (typeof userRoleUpdateDetails.userId !== 'undefined') { userId = userRoleUpdateDetails.userId; }\n\n    if (roleId.trim() === '') { return null; }\n    if (userId.trim() === '') { return Promise.reject('User id is empty'); }\n\n    return new Promise(() => {\n      dispatch(show_loading());\n      asyncUpdateUserRole(userId, roleId).then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          dispatch(successUpdateUserRole(json.message));\n        } else {\n          dispatch(errorUpdateUserRole(json.message));\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        dispatch(errorUpdateUserRole('error occurs!!!'));\n      });\n    });\n  };\n}\n\nfunction asyncDeleteRole (id) {\n  return fireAjax('POST', '', {\n    'action':  'delete_role',\n    'role_id': id\n  });\n}\n\nexport function deleteRole (id) {\n  return function (dispatch, getState) {\n    if (typeof id === 'undefined' || id == '') { return Promise.reject('Delete Id is empty'); }\n    return new Promise((resolve, reject) => {\n      dispatch(show_loading());\n      asyncDeleteRole(id).then((json) => {\n        dispatch(hide_loading());\n        if (json.error == 0) {\n          resolve(json.message);\n          dispatch(getRolesList());\n        } else {\n          reject(json.message);\n        }\n      }, (error) => {\n        dispatch(hide_loading());\n        reject('error occurs!!!');\n      });\n    });\n  };\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport {notify} from '../../../services/notify';\nimport Menu from '../../../components/generic/Menu';\nimport Header from '../../../components/generic/Header';\nimport {isNotUserValid} from '../../../services/generic';\nimport AlertNotification from '../../../components/generic/AlertNotification';\nimport AddRolesForm from '../../../modules/manageRoles/components/AddRolesForm';\nimport DisplayRolesLists from '../../../modules/manageRoles/components/DisplayRolesLists';\nimport UsersRolesList from '../../../components/generic/UsersRolesList';\nimport * as actions from '../../../redux/actions';\nimport * as actionsManageRoles from '../../../redux/manageRoles/actions/manageRoles';\n\nclass ManageRoles extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n    this.state = {\n      status_message: '',\n      rolesData:      [],\n      updateRole:     {rolesId: '', actionId: '', pageId: '', notificationId: ''}\n    };\n    this.callAddNewRole = this.callAddNewRole.bind(this);\n    this.handleChangeNotification = this.handleChangeNotification.bind(this);\n    this.onUserClick = this.onUserClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentWillMount () {\n    this.props.onRolesList();\n  }\n  componentWillReceiveProps (props) {\n    let {loggedUser, location, history, manageRoles:{rolesData}} = props;\n    let isNotValid = isNotUserValid(location.pathname, loggedUser);\n    if (isNotValid.status) {\n      history.push(isNotValid.redirectTo);\n    }\n    if (rolesData !== this.state.rolesData) {\n      this.setState({\n        rolesData\n      });\n    }\n  }\n  callAddNewRole (newRoleDetails) {\n    this.props.onAddNewRole(newRoleDetails);\n  }\n  handleChangeNotification (id2, id1) {\n    let {updateRole} = this.state;\n    updateRole.rolesId = id1;\n    updateRole.notificationId = id2;\n    this.props.onUpdateRole(updateRole);\n  }\n  onUserClick (userId, roleId) {\n    let userRoleUpdateDetails = {userId: userId, roleId: roleId};\n    if (roleId !== '-1') {\n      this.props.onUpdateUserRole(userRoleUpdateDetails);\n      this.props.onRolesList();\n    }\n  }\n  handleDelete (id) {\n    this.props.onDelete(id).then((data) => { notify('Success!', data, 'success'); }, (error) => { notify('Error!', error, 'error'); });\n  }\n  handleChange (e, targetId, roleId) {\n    let rolesData = this.state.rolesData;\n    let updateRole = _.clone(this.state.updateRole);\n    _.map(rolesData.roles, (role, key) => {\n      if (role.id === roleId) {\n        _.map(role.role_pages, (page, k) => {\n          if (page.id === targetId) {\n            page.is_assigned = e.target.checked;\n            updateRole.pageId = targetId;\n            _.map(page.actions_list, (action, ke) => {\n              action.is_assigned = e.target.checked;\n            });\n          } else {\n            _.map(page.actions_list, (action, ke) => {\n              if (action.id === targetId) {\n                action.is_assigned = e.target.checked;\n                updateRole.actionId = targetId;\n              }\n            });\n          }\n        });\n      }\n    });\n    updateRole.rolesId = roleId;\n    this.setState({rolesData});\n    this.props.onUpdateRole(updateRole);\n  }\n  render () {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <AlertNotification message={this.props.manageRoles.status_message} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'Manage Roles'} showLoading={this.props.frontend.show_loading} />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <AddRolesForm callAddNewRole={this.callAddNewRole} displayData={this.state.rolesData} />\n              </div>\n              <div className=\"row\" id=\"role_page\">\n                <div className=\"col-sm-8\">\n                  <DisplayRolesLists\n                    displayData={this.state.rolesData}\n                    handleClick={(id) => this.click(id)}\n                    handleChange={this.handleChange}\n                    handleChangeNotification={(notificationId, rolesId) => this.handleChangeNotification(notificationId, rolesId)}\n                    handleDelete={(id) => { this.handleDelete(id); this.setState({deleteId: id}); }}\n                  />\n                </div>\n                <div className=\"col-sm-4\">\n                  <UsersRolesList users={this.state.rolesData} onChange={(userId, roleId) => { this.onUserClick(userId, roleId); }} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:    state.frontend.toJS(),\n    loggedUser:  state.logged_user.userLogin,\n    usersList:   state.usersList.toJS(),\n    manageRoles: state.manageRoles.toJS()\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => { return dispatch(actions.isAlreadyLogin()); },\n    onAddNewRole:     (newRoleDetails) => { return dispatch(actionsManageRoles.addNewRole(newRoleDetails)); },\n    onRolesList:      () => { return dispatch(actionsManageRoles.getRolesList()); },\n    onUpdateRole:     (roleUpdateDetails) => { return dispatch(actionsManageRoles.updateRoles(roleUpdateDetails)); },\n    onUpdateUserRole: (userRoleUpdateDetails) => { return dispatch(actionsManageRoles.updateUserRole(userRoleUpdateDetails)); },\n    onDelete:         (id) => { return dispatch(actionsManageRoles.deleteRole(id)); }\n  };\n};\n\nconst VisibleManageUsers = connect(mapStateToProps, mapDispatchToProps)(ManageRoles);\nconst RouterVisibleManageUsers = withRouter(VisibleManageUsers);\nexport default RouterVisibleManageUsers;\n\nManageRoles.PropTypes = {\n  onIsAlreadyLogin:          PropTypes.func.isRequired,\n  onFetchUserPolicyDocument: PropTypes.func.isRequired,\n  onRolesList:               PropTypes.func.isRequired,\n  route:                     PropTypes.shape({\n    path: PropTypes.string.isRequired\n  }).isRequired,\n  loggedUser: PropTypes.shape({\n    isLoggedIn: PropTypes.bool.isRequired,\n    data:       PropTypes.object.isRequired\n  }).isRequired,\n  policy_documents: PropTypes.shape({\n    policyDocuments: PropTypes.object\n  }).isRequired,\n  usersList: PropTypes.object.isRequired,\n  router:    PropTypes.object.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport Snackbar from 'material-ui/Snackbar';\n\nconst AlertNotification = ({message,handleRequestClose}) => {\n  let showAlert = false;\n  let alertMessage = '';\n  if (!_.isEmpty(message)) {\n    showAlert = true;\n    alertMessage = message;\n  }\n \n  return (\n    <Snackbar\n      open={showAlert}\n      message={alertMessage}\n      autoHideDuration={4000}\n    />\n  );\n};\n\nAlertNotification.PropTypes = {\n  message: PropTypes.string.isRequired\n};\nexport default AlertNotification;\n"],"sourceRoot":""}