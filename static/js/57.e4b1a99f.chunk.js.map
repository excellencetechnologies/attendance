{"version":3,"sources":["components/leave/myLeaves/MyLeavesList.jsx","modules/leave/components/myLeaves/UserLeavesList.jsx","redux/leave/actions/myLeaves.js","modules/leave/containers/myLeaves.jsx"],"names":["MyLeavesList","_ref","leave","handleOpen","cancelLeave","s","status","f_char","charAt","leaveStatusColor","react_default","a","createElement","className","concat","applied_on","from_date","to_date","no_of_days","onClick","user_Id","reason","leave_type","late_reason","comment","doc_require","id","doc_link","method","target","action","UserLeavesList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","open","user_token","bind","assertThisInitialized","handleClose","callUpdateDocuments","setState","getToken","userId","onCancelLeave","then","data","notify","catch","err","e","stop","refs","file","value","preventDefault","_this2","page_url","window","location","href","leavesList","_","userLeaves","leaves","key","myLeaves_MyLeavesList","Dialog_default","title","modal","onRequestClose","contentClassName","autoScrollBodyContent","CONFIG","upload_leave_url","encType","type","name","ref","React","Component","getMyLeaves","dispatch","getState","Promise","reslove","reject","show_loading","fireAjax","json","hide_loading","error","createAction","constants","message","user_id","date","async_cancelLeave","MyLeaves","onIsAlreadyLogin","onMyLeavesList","scrollTo","isNotValid","isNotUserValid","pathname","loggedUser","history","push","redirectTo","Menu","role","Header","pageTitle","showLoading","frontend","myLeaves_UserLeavesList","VisibleMyLeaves","connect","toJS","logged_user","userLogin","applyLeave","actions","actions_myLeaves","RouterVisibleMyLeaves","withRouter"],"mappings":"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","file":"static/js/57.e4b1a99f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import {ButtonInfo, Button} from 'src/components/generic/buttons';\n\nconst MyLeavesList = ({leave, handleOpen, cancelLeave}) => {\n  let s = leave.status;\n  let f_char = s.charAt(0);\n  let leaveStatusColor = '';\n  if (s === 'Approved') {\n    leaveStatusColor = 'green-A200';\n  } else if (s === 'Pending') {\n    leaveStatusColor = 'blue';\n  } else if (s === 'Rejected') {\n    leaveStatusColor = 'red-500';\n  } else if (s === 'Cancelled Request') {\n    leaveStatusColor = 'red-100';\n  }\n\n  return (\n    <div className={`list-item b-l b-l-2x b-${leaveStatusColor}`}>\n      <div className=\"list-left\">\n        <span className={`w-40 avatar ${leaveStatusColor}`}>\n          {f_char}\n        </span>\n      </div>\n      <div className=\"list-body\">\n        <div className=\"pull-right text-muted text-xs\">\n        </div>\n        <div>\n          <span className=\"_500\">Status : {leave.status}</span>\n        </div>\n        <div>\n          <span className=\"_500\">Apply on : {leave.applied_on}</span>\n        </div>\n        <div>\n          <span className=\"_500\">From {leave.from_date} to {leave.to_date}</span>\n          &nbsp;&nbsp;&nbsp;<span className=\"label cyan\">{leave.no_of_days} Day</span>\n        <span className=\"label cyan m-l-xs\" onClick={() => cancelLeave(leave.user_Id, leave.from_date)}>Cancel</span>\n        </div>\n        <div className=\"text-ellipsis text-muted text-sm\">Reason : {leave.reason}</div>\n        {\n          leave.leave_type !== ''\n          ? <div className=\"text-ellipsis text-muted text-sm\">Leave Type : {leave.leave_type}</div>\n          : null\n        }\n        {\n          leave.late_reason !== ''\n          ? <div className=\"text-ellipsis text-muted text-sm\">Reason For Late Applying : {leave.late_reason}</div>\n          : null\n        }\n        {\n          leave.comment !== ''\n          ? <div className=\"text-ellipsis text-muted text-sm\">comment : {leave.comment}</div>\n          : null\n        }\n      </div>\n\n      <div className=\"row\">\n        {\n          leave.doc_require !== '0'\n          ? <div className=\"col-xs-12 row\">\n            <button\n              onClick={() => { handleOpen(leave.id); }}\n              className=\"btn btn-info btn-responsive btn-res col-xs-2\">{'Upload Leave Document'}\n            </button>\n          {\n            leave.doc_link === ''\n            ? null\n            : <div>\n              <form method=\"get\" target=\"_blank\" action={leave.doc_link}>\n                <button\n                  className=\"btn btn-primary btn-responsive btn-res col-xs-2\">\n                  {'View Document'}\n                </button>\n              </form>\n            </div>\n        }\n        <div className=\"col-xs-12 row\">\n          <small className=\"uploadnotic\" >* Upload file size should be less than 1 MB</small>\n        </div>\n          </div>\n          : null\n        }\n      </div>\n    </div>\n  );\n};\n\nMyLeavesList.propTypes = {\n  leave: PropTypes.shape({\n    status:      PropTypes.string.isRequired,\n    applied_on:  PropTypes.string.isRequired,\n    from_date:   PropTypes.string.isRequired,\n    to_date:     PropTypes.string.isRequired,\n    no_of_days:  PropTypes.number.isRequired,\n    user_Id:     PropTypes.number.isRequired,\n    reason:      PropTypes.string.isRequired,\n    leave_type:  PropTypes.string.isRequired,\n    late_reason: PropTypes.string.isRequired,\n    comment:     PropTypes.string.isRequired\n  }).isRequired,\n  handleOpen:  PropTypes.func.isRequired,\n  cancelLeave: PropTypes.func.isRequired\n};\n\nexport default MyLeavesList;\n","import React from 'react';\nimport * as _ from 'lodash';\nimport Dialog from 'material-ui/Dialog';\nimport {notify} from '../../../../services/notify';\nimport {getToken} from '../../../../services/generic';\nimport {CONFIG} from '../../../../config/index';\nimport MyLeavesList from '../../../../components/leave/myLeaves/MyLeavesList';\n\nclass UserLeavesList extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      open:       false,\n      id:         '',\n      user_token: ''\n    };\n    this.cancelLeave = this.cancelLeave.bind(this);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.callUpdateDocuments = this.callUpdateDocuments.bind(this);\n  }\n\n  componentWillReceiveProps (props) {\n    this.setState({user_token: getToken()});\n    \n  }\n\n  cancelLeave (userId, from_date) {\n    this.props.onCancelLeave(userId, from_date).then((data) => {\n      notify(data);\n    }).catch((err) => {\n      notify(err);\n    });\n  }\n\n  handleOpen (id) {\n    this.setState({open: true, id: id});\n  }\n  handleClose () {\n    this.setState({open: false});\n  }\n\n  callUpdateDocuments (e) {\n    let docProof = this.refs.file.value;\n    let stop = false;\n    if (docProof === '') {\n      stop = true;\n      notify('Please select a file');\n    }\n    if (stop) {\n      e.preventDefault();\n    }\n  }\n\n  render () {\n    let page_url = window.location.href;\n    \n    let leavesList = _.map(this.props.userLeaves.leaves, (leave, key) => {\n      return <MyLeavesList key={key} leave={leave} handleOpen={this.handleOpen} cancelLeave={this.cancelLeave} />;\n    });\n    // className=\"dialog-content\"\n    return (\n      <div className=\"row\">\n        <Dialog title=\"Upload Leave Document\"\n          modal={false}\n          open={this.state.open}\n          onRequestClose={this.handleClose}\n          contentClassName=\"dialog-content\" \n          autoScrollBodyContent>\n          <div>\n            <form action={CONFIG.upload_leave_url} method=\"POST\" encType=\"multipart/form-data\">\n              <input type=\"hidden\" name=\"token\" value={this.state.user_token} />\n              <input type=\"hidden\" name=\"leaveid\" value={this.state.id} />\n              <input type=\"hidden\" name=\"page_url\" value={page_url} />\n              <div className=\"form-group\">\n                <label>Attachment</label>\n                <input type=\"file\" className=\"form-control\" ref=\"file\" name=\"docProof\" />\n              </div>\n              <div className=\"form-group\">\n                <input type=\"submit\" name=\"submit\" value=\"Upload\" className=\"col-xs-12 md-btn md-raised indigo\" onClick={(e) => {\n                  this.callUpdateDocuments(e);\n                }} />\n              </div>\n            </form>\n          </div>\n        </Dialog>\n        <div className=\"row-col\">\n          <div className=\"list white\">\n            {leavesList}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserLeavesList;\n","import {createAction} from 'redux-actions';\nimport * as _ from 'lodash';\nimport * as jwt from 'jwt-simple';\nimport {CONFIG} from '../../../config/index';\nimport {fireAjax} from '../../../services/index';\nimport * as constants from '../../../redux/constants';\nimport {show_loading, hide_loading} from '../../../redux/generic/actions/frontend';\n\nexport function list_my_leaves_sucess (data) {\n  return createAction(constants.ACTION_LIST_MY_LEAVES_SUCCESS)(data);\n}\n\nexport function list_my_leaves_empty (data) {\n  return createAction(constants.ACTION_LIST_MY_LEAVES_EMPTY)([]);\n}\n\nexport function list_my_leaves_error (err) {\n  return createAction(constants.ACTION_LIST_MY_LEAVES_ERROR)('Error Occurs !!');\n}\n\nfunction async_getMyLeaves () {\n  return fireAjax('POST', '', {\n    'action': 'get_my_leaves'\n  });\n}\n\nexport function getMyLeaves () {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_getMyLeaves().then(\n\t\t\t\t(json) => {\n  dispatch(hide_loading()); // hide loading icon\n  if (json.error == 0) {\n    dispatch(list_my_leaves_sucess(json.data));\n\t\t \t\t\t} else {\n\t\t \t\t\t\tdispatch(list_my_leaves_empty(json.data.message));\n\t\t \t\t\t}\n},\n\t\t\t\t(error) => {\n  dispatch(hide_loading()); // hide loading icon\n  dispatch(list_my_leaves_error(error.data.message));\n}\n\t\t\t);\n    });\n  };\n}\n\nfunction async_cancelLeave (userId, from_date) {\n  return fireAjax('POST', '', {\n    'action':  'cancel_applied_leave',\n    'user_id': userId,\n \t\t'date':    from_date\n  });\n}\n\nexport function cancelLeave (userId, from_date) {\n  return function (dispatch, getState) {\n    return new Promise((reslove, reject) => {\n      dispatch(show_loading()); // show loading icon\n      async_cancelLeave(userId, from_date).then(\n\t\t\t\t(json) => {\n  dispatch(hide_loading()); // hide loading icon\n  if (json.error == 0) {\n    dispatch(getMyLeaves());\n\t\t \t\t\t} else {\n    reject(json.data.message);\n\t\t \t\t\t}\n},\n\t\t\t\t(error) => {\n  dispatch(hide_loading()); // hide loading icon\n  reject(error.data.message);\n}\n\t\t\t);\n    });\n  };\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport Menu from '../../../components/generic/Menu';\nimport {isNotUserValid} from '../../../services/generic';\nimport Header from '../../../components/generic/Header';\nimport UserLeavesList from '../../../modules/leave/components/myLeaves/UserLeavesList';\nimport * as actions from '../../../redux/actions';\nimport * as actions_myLeaves from '../../../redux/leave/actions/myLeaves';\n\nclass MyLeaves extends React.Component {\n  constructor (props) {\n    super(props);\n    this.props.onIsAlreadyLogin();\n  }\n  componentWillMount () {\n    this.props.onMyLeavesList();\n  }\n  componentWillReceiveProps (props) {\n    window.scrollTo(0, 0);\n    let isNotValid = isNotUserValid(this.props.location.pathname, props.loggedUser);\n    if (isNotValid.status) {\n      this.props.history.push(isNotValid.redirectTo);\n    }\n  }\n  render () {\n    return (\n      <div>\n        <Menu {...this.props} />\n        <div id=\"content\" className=\"app-content box-shadow-z0\" role=\"main\">\n          <Header pageTitle={'My Leaves'} showLoading={this.props.frontend.show_loading} />\n          <div className=\"app-body\" id=\"view\">\n            <div className=\"padding\">\n              <div className=\"row\">\n                <div className=\"col-md-12\">\n                  <UserLeavesList {...this.props} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps (state) {\n  return {\n    frontend:   state.frontend.toJS(),\n    loggedUser: state.logged_user.userLogin,\n    userLeaves: state.userLeaves.toJS(),\n    applyLeave: state.applyLeave.toJS()\n  };\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIsAlreadyLogin: () => {\n      return dispatch(actions.isAlreadyLogin());\n    },\n    onMyLeavesList: () => {\n      return dispatch(actions_myLeaves.getMyLeaves());\n    },\n    onCancelLeave: (userId, from_date) => {\n      return dispatch(actions_myLeaves.cancelLeave(userId, from_date));\n    }\n  };\n};\n\nconst VisibleMyLeaves = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyLeaves);\n\nconst RouterVisibleMyLeaves = withRouter(VisibleMyLeaves);\n\nexport default RouterVisibleMyLeaves;\n"],"sourceRoot":""}